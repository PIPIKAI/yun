syntax = "proto3";

package pb;

option go_package="./pb";
// The greeting service definition.
service Storage {
  // Sends a greeting
  rpc HeartBeat (HeartBeatRequest) returns (HeartBeatReply) {}
  rpc PreUpload (PreUploadRequest) returns (PreUploadReply) {}
  rpc Upload (UploadRequest) returns (UploadReply) {}
  rpc Merge (MergeRequest) returns (MergeReply) {}
  rpc Manage (ManageRequest) returns (ManageReply) {}
}

// The request message containing the user's name.
message HeartBeatRequest {
}

// The response message containing the greetings
message HeartBeatReply {
  map<string,string> status = 1;
}

message FileMeta {
  int64 size = 1;
  string name = 2;
  string format = 3;
  int64 ModTime = 4;
  string md5 = 5;
}

message File {
    string fileName =1;
    int64 size = 2;
    bytes content =3;

}
message UploadRequest{
    string fileId = 1;
    int64 blockId = 2;
    bytes rawData = 3;
}

message PreUploadRequest{
  string sessionId = 1;
  FileMeta filemata = 2;
  repeated string blockMd5 = 3;
}

message PreUploadReply{
  int32 code = 1;
  repeated bool blockstatus= 2;
}
message MergeRequest{
    string md5 = 1;
    int64 blockSize = 2;
}

message MergeReply {
  string path = 1;
}
message Strings{
  repeated string strs = 1;
}
message UploadReply{
  string md5 = 1;
    // bytes link= 1;
}

message ManageRequest{
    string method = 1;
    string token = 2;
    map<string,string> args =3; 
}

message ManageReply{

}