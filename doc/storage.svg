<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="406" onload="init(evt)" viewBox="0 0 1200 406" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="406.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="389" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="389" > </text>
<g id="frames">
<g >
<title>net.(*conn).Write (33 samples, 3.51%)</title><rect x="660.8" y="293" width="41.4" height="15.0" fill="rgb(238,4,2)" rx="2" ry="2" />
<text  x="663.82" y="303.5" >net..</text>
</g>
<g >
<title>runtime.wbBufFlush (4 samples, 0.43%)</title><rect x="1015.7" y="277" width="5.0" height="15.0" fill="rgb(254,67,23)" rx="2" ry="2" />
<text  x="1018.70" y="287.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).allocRange (1 samples, 0.11%)</title><rect x="105.3" y="53" width="1.3" height="15.0" fill="rgb(239,183,46)" rx="2" ry="2" />
<text  x="108.30" y="63.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).prepare (1 samples, 0.11%)</title><rect x="662.1" y="245" width="1.2" height="15.0" fill="rgb(221,90,0)" rx="2" ry="2" />
<text  x="665.07" y="255.5" ></text>
</g>
<g >
<title>runtime.markBits.isMarked (1 samples, 0.11%)</title><rect x="993.1" y="261" width="1.3" height="15.0" fill="rgb(223,143,7)" rx="2" ry="2" />
<text  x="996.12" y="271.5" ></text>
</g>
<g >
<title>runtime.lock2 (6 samples, 0.64%)</title><rect x="1171.2" y="277" width="7.5" height="15.0" fill="rgb(244,110,52)" rx="2" ry="2" />
<text  x="1174.19" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.11%)</title><rect x="463.9" y="165" width="1.3" height="15.0" fill="rgb(218,59,21)" rx="2" ry="2" />
<text  x="466.94" y="175.5" ></text>
</g>
<g >
<title>google.golang.org/grpc.(*Server).Serve.func3 (15 samples, 1.59%)</title><rect x="11.3" y="341" width="18.8" height="15.0" fill="rgb(244,48,38)" rx="2" ry="2" />
<text  x="14.25" y="351.5" ></text>
</g>
<g >
<title>runtime.SetFinalizer (1 samples, 0.11%)</title><rect x="102.8" y="245" width="1.2" height="15.0" fill="rgb(220,90,5)" rx="2" ry="2" />
<text  x="105.79" y="255.5" ></text>
</g>
<g >
<title>runtime.SetFinalizer (2 samples, 0.21%)</title><rect x="461.4" y="197" width="2.5" height="15.0" fill="rgb(249,6,28)" rx="2" ry="2" />
<text  x="464.43" y="207.5" ></text>
</g>
<g >
<title>runtime.netpoll (16 samples, 1.70%)</title><rect x="1089.7" y="277" width="20.0" height="15.0" fill="rgb(217,87,28)" rx="2" ry="2" />
<text  x="1092.68" y="287.5" ></text>
</g>
<g >
<title>runtime.mPark (9 samples, 0.96%)</title><rect x="1078.4" y="277" width="11.3" height="15.0" fill="rgb(252,128,20)" rx="2" ry="2" />
<text  x="1081.40" y="287.5" ></text>
</g>
<g >
<title>google.golang.org/grpc/internal/transport.newBufWriter (1 samples, 0.11%)</title><rect x="26.3" y="277" width="1.3" height="15.0" fill="rgb(212,73,15)" rx="2" ry="2" />
<text  x="29.30" y="287.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.11%)</title><rect x="102.8" y="181" width="1.2" height="15.0" fill="rgb(239,176,19)" rx="2" ry="2" />
<text  x="105.79" y="191.5" ></text>
</g>
<g >
<title>main.main (3 samples, 0.32%)</title><rect x="1022.0" y="325" width="3.7" height="15.0" fill="rgb(214,49,51)" rx="2" ry="2" />
<text  x="1024.97" y="335.5" ></text>
</g>
<g >
<title>runtime.ready (2 samples, 0.21%)</title><rect x="144.2" y="133" width="2.5" height="15.0" fill="rgb(216,98,8)" rx="2" ry="2" />
<text  x="147.18" y="143.5" ></text>
</g>
<g >
<title>runtime.notesleep (9 samples, 0.96%)</title><rect x="1078.4" y="261" width="11.3" height="15.0" fill="rgb(241,109,54)" rx="2" ry="2" />
<text  x="1081.40" y="271.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (22 samples, 2.34%)</title><rect x="874.0" y="261" width="27.6" height="15.0" fill="rgb(208,134,39)" rx="2" ry="2" />
<text  x="877.00" y="271.5" >r..</text>
</g>
<g >
<title>runtime.copystack (1 samples, 0.11%)</title><rect x="658.3" y="245" width="1.3" height="15.0" fill="rgb(235,1,32)" rx="2" ry="2" />
<text  x="661.31" y="255.5" ></text>
</g>
<g >
<title>runtime.(*moduledata).textAddr (1 samples, 0.11%)</title><rect x="17.5" y="53" width="1.3" height="15.0" fill="rgb(227,25,15)" rx="2" ry="2" />
<text  x="20.52" y="63.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep (1 samples, 0.11%)</title><rect x="1069.6" y="213" width="1.3" height="15.0" fill="rgb(243,209,23)" rx="2" ry="2" />
<text  x="1072.62" y="223.5" ></text>
</g>
<g >
<title>syscall.Syscall (27 samples, 2.87%)</title><rect x="46.4" y="165" width="33.8" height="15.0" fill="rgb(221,51,44)" rx="2" ry="2" />
<text  x="49.37" y="175.5" >sy..</text>
</g>
<g >
<title>runtime.futexwakeup (1 samples, 0.11%)</title><rect x="84.0" y="101" width="1.2" height="15.0" fill="rgb(245,169,36)" rx="2" ry="2" />
<text  x="86.99" y="111.5" ></text>
</g>
<g >
<title>runtime.acquirep (1 samples, 0.11%)</title><rect x="1166.2" y="261" width="1.2" height="15.0" fill="rgb(207,5,24)" rx="2" ry="2" />
<text  x="1169.17" y="271.5" ></text>
</g>
<g >
<title>runtime.newproc1 (2 samples, 0.21%)</title><rect x="150.4" y="213" width="2.6" height="15.0" fill="rgb(224,122,1)" rx="2" ry="2" />
<text  x="153.45" y="223.5" ></text>
</g>
<g >
<title>syscall.Read (31 samples, 3.29%)</title><rect x="153.0" y="213" width="38.8" height="15.0" fill="rgb(233,131,32)" rx="2" ry="2" />
<text  x="155.95" y="223.5" >sys..</text>
</g>
<g >
<title>fmt.(*pp).handleMethods (1 samples, 0.11%)</title><rect x="20.0" y="197" width="1.3" height="15.0" fill="rgb(233,18,19)" rx="2" ry="2" />
<text  x="23.03" y="207.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint64).Load (1 samples, 0.11%)</title><rect x="1169.9" y="277" width="1.3" height="15.0" fill="rgb(220,27,51)" rx="2" ry="2" />
<text  x="1172.94" y="287.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Close (1 samples, 0.11%)</title><rect x="101.5" y="245" width="1.3" height="15.0" fill="rgb(216,132,34)" rx="2" ry="2" />
<text  x="104.54" y="255.5" ></text>
</g>
<g >
<title>runtime.makeslice (33 samples, 3.51%)</title><rect x="613.2" y="261" width="41.3" height="15.0" fill="rgb(213,86,16)" rx="2" ry="2" />
<text  x="616.17" y="271.5" >run..</text>
</g>
<g >
<title>runtime.(*mSpanStateBox).get (1 samples, 0.11%)</title><rect x="872.7" y="261" width="1.3" height="15.0" fill="rgb(207,159,7)" rx="2" ry="2" />
<text  x="875.74" y="271.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (2 samples, 0.21%)</title><rect x="109.1" y="181" width="2.5" height="15.0" fill="rgb(251,152,19)" rx="2" ry="2" />
<text  x="112.06" y="191.5" ></text>
</g>
<g >
<title>github.com/spf13/cobra.(*Command).Execute (3 samples, 0.32%)</title><rect x="1022.0" y="309" width="3.7" height="15.0" fill="rgb(223,127,30)" rx="2" ry="2" />
<text  x="1024.97" y="319.5" ></text>
</g>
<g >
<title>runtime.usleep (7 samples, 0.74%)</title><rect x="1153.6" y="229" width="8.8" height="15.0" fill="rgb(210,95,39)" rx="2" ry="2" />
<text  x="1156.63" y="239.5" ></text>
</g>
<g >
<title>runtime.greyobject (1 samples, 0.11%)</title><rect x="907.9" y="229" width="1.2" height="15.0" fill="rgb(217,131,16)" rx="2" ry="2" />
<text  x="910.85" y="239.5" ></text>
</g>
<g >
<title>net.(*conn).Read (31 samples, 3.29%)</title><rect x="153.0" y="245" width="38.8" height="15.0" fill="rgb(227,46,28)" rx="2" ry="2" />
<text  x="155.95" y="255.5" >net..</text>
</g>
<g >
<title>net.(*netFD).Write (33 samples, 3.51%)</title><rect x="660.8" y="277" width="41.4" height="15.0" fill="rgb(246,79,29)" rx="2" ry="2" />
<text  x="663.82" y="287.5" >net..</text>
</g>
<g >
<title>runtime.wakep (1 samples, 0.11%)</title><rect x="145.4" y="117" width="1.3" height="15.0" fill="rgb(211,83,35)" rx="2" ry="2" />
<text  x="148.43" y="127.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.11%)</title><rect x="608.2" y="165" width="1.2" height="15.0" fill="rgb(220,53,11)" rx="2" ry="2" />
<text  x="611.15" y="175.5" ></text>
</g>
<g >
<title>golang.org/x/net/http2.Flags.Has (1 samples, 0.11%)</title><rect x="80.2" y="293" width="1.3" height="15.0" fill="rgb(214,197,0)" rx="2" ry="2" />
<text  x="83.22" y="303.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.21%)</title><rect x="16.3" y="165" width="2.5" height="15.0" fill="rgb(246,218,15)" rx="2" ry="2" />
<text  x="19.27" y="175.5" ></text>
</g>
<g >
<title>runtime.notewakeup (2 samples, 0.21%)</title><rect x="97.8" y="117" width="2.5" height="15.0" fill="rgb(251,105,35)" rx="2" ry="2" />
<text  x="100.78" y="127.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Read (3 samples, 0.32%)</title><rect x="40.1" y="197" width="3.8" height="15.0" fill="rgb(248,157,22)" rx="2" ry="2" />
<text  x="43.10" y="207.5" ></text>
</g>
<g >
<title>runtime.newproc (2 samples, 0.21%)</title><rect x="150.4" y="261" width="2.6" height="15.0" fill="rgb(243,129,37)" rx="2" ry="2" />
<text  x="153.45" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan (1 samples, 0.11%)</title><rect x="1069.6" y="197" width="1.3" height="15.0" fill="rgb(238,66,53)" rx="2" ry="2" />
<text  x="1072.62" y="207.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.11%)</title><rect x="26.3" y="213" width="1.3" height="15.0" fill="rgb(250,141,1)" rx="2" ry="2" />
<text  x="29.30" y="223.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).balance (1 samples, 0.11%)</title><rect x="109.1" y="101" width="1.2" height="15.0" fill="rgb(229,221,25)" rx="2" ry="2" />
<text  x="112.06" y="111.5" ></text>
</g>
<g >
<title>runtime.mallocgc (4 samples, 0.43%)</title><rect x="484.0" y="117" width="5.0" height="15.0" fill="rgb(218,36,42)" rx="2" ry="2" />
<text  x="487.01" y="127.5" ></text>
</g>
<g >
<title>google.golang.org/grpc/internal/transport.(*Stream).waitOnHeader (1 samples, 0.11%)</title><rect x="654.5" y="293" width="1.3" height="15.0" fill="rgb(233,158,54)" rx="2" ry="2" />
<text  x="657.55" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (1 samples, 0.11%)</title><rect x="722.3" y="85" width="1.2" height="15.0" fill="rgb(234,88,24)" rx="2" ry="2" />
<text  x="725.26" y="95.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (3 samples, 0.32%)</title><rect x="105.3" y="133" width="3.8" height="15.0" fill="rgb(252,1,44)" rx="2" ry="2" />
<text  x="108.30" y="143.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.11%)</title><rect x="722.3" y="117" width="1.2" height="15.0" fill="rgb(206,194,53)" rx="2" ry="2" />
<text  x="725.26" y="127.5" ></text>
</g>
<g >
<title>runtime.greyobject (2 samples, 0.21%)</title><rect x="889.0" y="165" width="2.6" height="15.0" fill="rgb(229,164,16)" rx="2" ry="2" />
<text  x="892.04" y="175.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.11%)</title><rect x="1023.2" y="101" width="1.3" height="15.0" fill="rgb(207,192,30)" rx="2" ry="2" />
<text  x="1026.22" y="111.5" ></text>
</g>
<g >
<title>runtime.step (2 samples, 0.21%)</title><rect x="604.4" y="37" width="2.5" height="15.0" fill="rgb(217,110,46)" rx="2" ry="2" />
<text  x="607.39" y="47.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.11%)</title><rect x="586.8" y="117" width="1.3" height="15.0" fill="rgb(219,225,31)" rx="2" ry="2" />
<text  x="589.83" y="127.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep (1 samples, 0.11%)</title><rect x="737.3" y="309" width="1.3" height="15.0" fill="rgb(237,114,1)" rx="2" ry="2" />
<text  x="740.31" y="319.5" ></text>
</g>
<g >
<title>bytes.growSlice (12 samples, 1.28%)</title><rect x="105.3" y="245" width="15.1" height="15.0" fill="rgb(253,147,14)" rx="2" ry="2" />
<text  x="108.30" y="255.5" ></text>
</g>
<g >
<title>runtime.scanstack.func1 (8 samples, 0.85%)</title><rect x="882.8" y="213" width="10.0" height="15.0" fill="rgb(238,84,6)" rx="2" ry="2" />
<text  x="885.77" y="223.5" ></text>
</g>
<g >
<title>google.golang.org/grpc/internal/transport.(*bufferPool).get (7 samples, 0.74%)</title><rect x="86.5" y="293" width="8.8" height="15.0" fill="rgb(252,63,16)" rx="2" ry="2" />
<text  x="89.49" y="303.5" ></text>
</g>
<g >
<title>runtime.casfrom_Gscanstatus (1 samples, 0.11%)</title><rect x="895.3" y="229" width="1.3" height="15.0" fill="rgb(231,221,43)" rx="2" ry="2" />
<text  x="898.31" y="239.5" ></text>
</g>
<g >
<title>runtime.procyield (1 samples, 0.11%)</title><rect x="1035.8" y="245" width="1.2" height="15.0" fill="rgb(249,216,28)" rx="2" ry="2" />
<text  x="1038.76" y="255.5" ></text>
</g>
<g >
<title>runtime.procyield (1 samples, 0.11%)</title><rect x="1186.2" y="213" width="1.3" height="15.0" fill="rgb(226,4,53)" rx="2" ry="2" />
<text  x="1189.24" y="223.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (3 samples, 0.32%)</title><rect x="613.2" y="165" width="3.7" height="15.0" fill="rgb(239,13,18)" rx="2" ry="2" />
<text  x="616.17" y="175.5" ></text>
</g>
<g >
<title>runtime.(*randomEnum).next (1 samples, 0.11%)</title><rect x="1027.0" y="277" width="1.2" height="15.0" fill="rgb(223,128,2)" rx="2" ry="2" />
<text  x="1029.98" y="287.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Accept (1 samples, 0.11%)</title><rect x="1022.0" y="133" width="1.2" height="15.0" fill="rgb(236,159,54)" rx="2" ry="2" />
<text  x="1024.97" y="143.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).empty (2 samples, 0.21%)</title><rect x="1039.5" y="293" width="2.5" height="15.0" fill="rgb(216,21,24)" rx="2" ry="2" />
<text  x="1042.52" y="303.5" ></text>
</g>
<g >
<title>runtime.selectgo (1 samples, 0.11%)</title><rect x="658.3" y="325" width="1.3" height="15.0" fill="rgb(214,166,48)" rx="2" ry="2" />
<text  x="661.31" y="335.5" ></text>
</g>
<g >
<title>runtime.lock (1 samples, 0.11%)</title><rect x="892.8" y="133" width="1.3" height="15.0" fill="rgb(248,156,10)" rx="2" ry="2" />
<text  x="895.81" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (1 samples, 0.11%)</title><rect x="722.3" y="101" width="1.2" height="15.0" fill="rgb(244,83,6)" rx="2" ry="2" />
<text  x="725.26" y="111.5" ></text>
</g>
<g >
<title>google.golang.org/grpc/internal/transport.(*bufferPool).put (2 samples, 0.21%)</title><rect x="586.8" y="165" width="2.5" height="15.0" fill="rgb(252,186,13)" rx="2" ry="2" />
<text  x="589.83" y="175.5" ></text>
</g>
<g >
<title>os.openFileNolog (4 samples, 0.43%)</title><rect x="461.4" y="229" width="5.1" height="15.0" fill="rgb(225,1,49)" rx="2" ry="2" />
<text  x="464.43" y="239.5" ></text>
</g>
<g >
<title>runtime.saveblockevent (10 samples, 1.06%)</title><rect x="594.4" y="149" width="12.5" height="15.0" fill="rgb(247,44,23)" rx="2" ry="2" />
<text  x="597.36" y="159.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.11%)</title><rect x="1186.2" y="245" width="1.3" height="15.0" fill="rgb(221,142,45)" rx="2" ry="2" />
<text  x="1189.24" y="255.5" ></text>
</g>
<g >
<title>runtime.writeHeapBits.flush (1 samples, 0.11%)</title><rect x="586.8" y="69" width="1.3" height="15.0" fill="rgb(251,4,45)" rx="2" ry="2" />
<text  x="589.83" y="79.5" ></text>
</g>
<g >
<title>runtime.markrootBlock (6 samples, 0.64%)</title><rect x="901.6" y="261" width="7.5" height="15.0" fill="rgb(221,87,24)" rx="2" ry="2" />
<text  x="904.58" y="271.5" ></text>
</g>
<g >
<title>runtime.readvarint (1 samples, 0.11%)</title><rect x="603.1" y="37" width="1.3" height="15.0" fill="rgb(214,92,16)" rx="2" ry="2" />
<text  x="606.13" y="47.5" ></text>
</g>
<g >
<title>google.golang.org/protobuf/proto.UnmarshalOptions.unmarshal (55 samples, 5.84%)</title><rect x="482.8" y="197" width="68.9" height="15.0" fill="rgb(218,8,32)" rx="2" ry="2" />
<text  x="485.75" y="207.5" >google...</text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.11%)</title><rect x="100.3" y="261" width="1.2" height="15.0" fill="rgb(212,200,16)" rx="2" ry="2" />
<text  x="103.29" y="271.5" ></text>
</g>
<g >
<title>runtime.putempty (1 samples, 0.11%)</title><rect x="828.9" y="229" width="1.2" height="15.0" fill="rgb(241,58,42)" rx="2" ry="2" />
<text  x="831.85" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.11%)</title><rect x="722.3" y="197" width="1.2" height="15.0" fill="rgb(245,40,46)" rx="2" ry="2" />
<text  x="725.26" y="207.5" ></text>
</g>
<g >
<title>runtime/internal/syscall.Syscall6 (30 samples, 3.19%)</title><rect x="154.2" y="149" width="37.6" height="15.0" fill="rgb(225,215,2)" rx="2" ry="2" />
<text  x="157.21" y="159.5" >run..</text>
</g>
<g >
<title>runtime.lockWithRank (2 samples, 0.21%)</title><rect x="1034.5" y="277" width="2.5" height="15.0" fill="rgb(234,35,53)" rx="2" ry="2" />
<text  x="1037.51" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mcache).allocLarge (1 samples, 0.11%)</title><rect x="484.0" y="101" width="1.3" height="15.0" fill="rgb(238,122,52)" rx="2" ry="2" />
<text  x="487.01" y="111.5" ></text>
</g>
<g >
<title>runtime.putempty (5 samples, 0.53%)</title><rect x="855.2" y="261" width="6.3" height="15.0" fill="rgb(238,11,30)" rx="2" ry="2" />
<text  x="858.19" y="271.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.11%)</title><rect x="37.6" y="261" width="1.2" height="15.0" fill="rgb(249,76,29)" rx="2" ry="2" />
<text  x="40.59" y="271.5" ></text>
</g>
<g >
<title>runtime.scanstack (10 samples, 1.06%)</title><rect x="881.5" y="245" width="12.6" height="15.0" fill="rgb(239,163,7)" rx="2" ry="2" />
<text  x="884.52" y="255.5" ></text>
</g>
<g >
<title>google.golang.org/protobuf/proto.UnmarshalOptions.UnmarshalState (55 samples, 5.84%)</title><rect x="482.8" y="213" width="68.9" height="15.0" fill="rgb(237,206,48)" rx="2" ry="2" />
<text  x="485.75" y="223.5" >google...</text>
</g>
<g >
<title>runtime.(*gcControllerState).enlistWorker (1 samples, 0.11%)</title><rect x="613.2" y="117" width="1.2" height="15.0" fill="rgb(252,205,36)" rx="2" ry="2" />
<text  x="616.17" y="127.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (3 samples, 0.32%)</title><rect x="613.2" y="181" width="3.7" height="15.0" fill="rgb(224,93,50)" rx="2" ry="2" />
<text  x="616.17" y="191.5" ></text>
</g>
<g >
<title>runtime.gcStart.func1 (1 samples, 0.11%)</title><rect x="485.3" y="69" width="1.2" height="15.0" fill="rgb(236,127,5)" rx="2" ry="2" />
<text  x="488.26" y="79.5" ></text>
</g>
<g >
<title>google.golang.org/grpc/internal/syscall.SetTCPUserTimeout (1 samples, 0.11%)</title><rect x="21.3" y="277" width="1.2" height="15.0" fill="rgb(242,160,35)" rx="2" ry="2" />
<text  x="24.29" y="287.5" ></text>
</g>
<g >
<title>net.(*sysDialer).dialParallel (2 samples, 0.21%)</title><rect x="655.8" y="213" width="2.5" height="15.0" fill="rgb(242,89,10)" rx="2" ry="2" />
<text  x="658.80" y="223.5" ></text>
</g>
<g >
<title>runtime.addfinalizer (2 samples, 0.21%)</title><rect x="461.4" y="149" width="2.5" height="15.0" fill="rgb(247,73,37)" rx="2" ry="2" />
<text  x="464.43" y="159.5" ></text>
</g>
<g >
<title>runtime.lfstackUnpack (1 samples, 0.11%)</title><rect x="853.9" y="261" width="1.3" height="15.0" fill="rgb(233,123,42)" rx="2" ry="2" />
<text  x="856.93" y="271.5" ></text>
</g>
<g >
<title>runtime.fastlog2 (1 samples, 0.11%)</title><rect x="486.5" y="85" width="1.3" height="15.0" fill="rgb(228,74,30)" rx="2" ry="2" />
<text  x="489.51" y="95.5" ></text>
</g>
<g >
<title>runtime.startm (1 samples, 0.11%)</title><rect x="84.0" y="133" width="1.2" height="15.0" fill="rgb(250,30,8)" rx="2" ry="2" />
<text  x="86.99" y="143.5" ></text>
</g>
<g >
<title>runtime.(*pallocBits).summarize (1 samples, 0.11%)</title><rect x="1069.6" y="117" width="1.3" height="15.0" fill="rgb(250,227,43)" rx="2" ry="2" />
<text  x="1072.62" y="127.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.11%)</title><rect x="145.4" y="85" width="1.3" height="15.0" fill="rgb(232,55,35)" rx="2" ry="2" />
<text  x="148.43" y="95.5" ></text>
</g>
<g >
<title>runtime.saveblockevent (1 samples, 0.11%)</title><rect x="658.3" y="293" width="1.3" height="15.0" fill="rgb(226,196,25)" rx="2" ry="2" />
<text  x="661.31" y="303.5" ></text>
</g>
<g >
<title>google.golang.org/protobuf/internal/impl.(*MessageInfo).unmarshalPointer (54 samples, 5.74%)</title><rect x="484.0" y="165" width="67.7" height="15.0" fill="rgb(252,132,41)" rx="2" ry="2" />
<text  x="487.01" y="175.5" >google...</text>
</g>
<g >
<title>runtime.goready.func1 (2 samples, 0.21%)</title><rect x="144.2" y="149" width="2.5" height="15.0" fill="rgb(231,194,28)" rx="2" ry="2" />
<text  x="147.18" y="159.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination.func4.1 (1 samples, 0.11%)</title><rect x="744.8" y="245" width="1.3" height="15.0" fill="rgb(213,48,11)" rx="2" ry="2" />
<text  x="747.84" y="255.5" ></text>
</g>
<g >
<title>runtime.updateTimerPMask (1 samples, 0.11%)</title><rect x="743.6" y="213" width="1.2" height="15.0" fill="rgb(230,106,27)" rx="2" ry="2" />
<text  x="746.58" y="223.5" ></text>
</g>
<g >
<title>google.golang.org/grpc/internal/transport.(*http2Server).Close (3 samples, 0.32%)</title><rect x="101.5" y="293" width="3.8" height="15.0" fill="rgb(205,65,35)" rx="2" ry="2" />
<text  x="104.54" y="303.5" ></text>
</g>
<g >
<title>google.golang.org/grpc/internal/transport.(*recvBufferReader).Read (46 samples, 4.89%)</title><rect x="555.5" y="213" width="57.7" height="15.0" fill="rgb(254,81,43)" rx="2" ry="2" />
<text  x="558.48" y="223.5" >google..</text>
</g>
<g >
<title>runtime.mPark (1 samples, 0.11%)</title><rect x="1033.3" y="261" width="1.2" height="15.0" fill="rgb(209,188,28)" rx="2" ry="2" />
<text  x="1036.25" y="271.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (30 samples, 3.19%)</title><rect x="616.9" y="213" width="37.6" height="15.0" fill="rgb(240,228,7)" rx="2" ry="2" />
<text  x="619.93" y="223.5" >run..</text>
</g>
<g >
<title>runtime.addspecial (1 samples, 0.11%)</title><rect x="462.7" y="133" width="1.2" height="15.0" fill="rgb(206,216,25)" rx="2" ry="2" />
<text  x="465.69" y="143.5" ></text>
</g>
<g >
<title>runtime.procyield (2 samples, 0.21%)</title><rect x="1176.2" y="261" width="2.5" height="15.0" fill="rgb(205,52,26)" rx="2" ry="2" />
<text  x="1179.21" y="271.5" ></text>
</g>
<g >
<title>runtime.selectnbsend (4 samples, 0.43%)</title><rect x="95.3" y="261" width="5.0" height="15.0" fill="rgb(229,49,16)" rx="2" ry="2" />
<text  x="98.27" y="271.5" ></text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.11%)</title><rect x="1187.5" y="229" width="1.2" height="15.0" fill="rgb(211,160,40)" rx="2" ry="2" />
<text  x="1190.49" y="239.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).put (1 samples, 0.11%)</title><rect x="890.3" y="149" width="1.3" height="15.0" fill="rgb(245,165,39)" rx="2" ry="2" />
<text  x="893.30" y="159.5" ></text>
</g>
<g >
<title>runtime.systemstack (3 samples, 0.32%)</title><rect x="96.5" y="197" width="3.8" height="15.0" fill="rgb(233,204,38)" rx="2" ry="2" />
<text  x="99.52" y="207.5" ></text>
</g>
<g >
<title>runtime.forEachP (1 samples, 0.11%)</title><rect x="744.8" y="261" width="1.3" height="15.0" fill="rgb(216,113,36)" rx="2" ry="2" />
<text  x="747.84" y="271.5" ></text>
</g>
<g >
<title>google.golang.org/grpc/internal/transport.(*controlBuffer).put (2 samples, 0.21%)</title><rect x="144.2" y="261" width="2.5" height="15.0" fill="rgb(210,67,2)" rx="2" ry="2" />
<text  x="147.18" y="271.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).String (1 samples, 0.11%)</title><rect x="35.1" y="213" width="1.2" height="15.0" fill="rgb(237,149,33)" rx="2" ry="2" />
<text  x="38.08" y="223.5" ></text>
</g>
<g >
<title>fmt.(*pp).doPrintf (3 samples, 0.32%)</title><rect x="15.0" y="261" width="3.8" height="15.0" fill="rgb(225,163,25)" rx="2" ry="2" />
<text  x="18.02" y="271.5" ></text>
</g>
<g >
<title>runtime/internal/syscall.EpollWait (15 samples, 1.59%)</title><rect x="1090.9" y="261" width="18.8" height="15.0" fill="rgb(242,140,18)" rx="2" ry="2" />
<text  x="1093.94" y="271.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.11%)</title><rect x="102.8" y="229" width="1.2" height="15.0" fill="rgb(241,193,21)" rx="2" ry="2" />
<text  x="105.79" y="239.5" ></text>
</g>
<g >
<title>runtime.findfunc (1 samples, 0.11%)</title><rect x="658.3" y="213" width="1.3" height="15.0" fill="rgb(247,137,7)" rx="2" ry="2" />
<text  x="661.31" y="223.5" ></text>
</g>
<g >
<title>time.Duration.Seconds (1 samples, 0.11%)</title><rect x="147.9" y="277" width="1.3" height="15.0" fill="rgb(228,122,12)" rx="2" ry="2" />
<text  x="150.94" y="287.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.11%)</title><rect x="84.0" y="197" width="1.2" height="15.0" fill="rgb(207,5,35)" rx="2" ry="2" />
<text  x="86.99" y="207.5" ></text>
</g>
<g >
<title>google.golang.org/grpc/internal/transport.(*loopyWriter).processData (1 samples, 0.11%)</title><rect x="726.0" y="309" width="1.3" height="15.0" fill="rgb(241,118,35)" rx="2" ry="2" />
<text  x="729.03" y="319.5" ></text>
</g>
<g >
<title>runtime.wakep (2 samples, 0.21%)</title><rect x="97.8" y="149" width="2.5" height="15.0" fill="rgb(215,44,45)" rx="2" ry="2" />
<text  x="100.78" y="159.5" ></text>
</g>
<g >
<title>google.golang.org/grpc.(*addrConn).resetTransport (2 samples, 0.21%)</title><rect x="655.8" y="325" width="2.5" height="15.0" fill="rgb(224,42,30)" rx="2" ry="2" />
<text  x="658.80" y="335.5" ></text>
</g>
<g >
<title>runtime.startTheWorldWithSema (1 samples, 0.11%)</title><rect x="743.6" y="261" width="1.2" height="15.0" fill="rgb(238,176,36)" rx="2" ry="2" />
<text  x="746.58" y="271.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.11%)</title><rect x="1023.2" y="85" width="1.3" height="15.0" fill="rgb(250,159,27)" rx="2" ry="2" />
<text  x="1026.22" y="95.5" ></text>
</g>
<g >
<title>runtime.gentraceback (2 samples, 0.21%)</title><rect x="16.3" y="101" width="2.5" height="15.0" fill="rgb(229,183,20)" rx="2" ry="2" />
<text  x="19.27" y="111.5" ></text>
</g>
<g >
<title>syscall.RawSyscall6 (25 samples, 2.66%)</title><rect x="48.9" y="149" width="31.3" height="15.0" fill="rgb(244,126,22)" rx="2" ry="2" />
<text  x="51.87" y="159.5" >sy..</text>
</g>
<g >
<title>runtime.gopark (1 samples, 0.11%)</title><rect x="43.9" y="133" width="1.2" height="15.0" fill="rgb(228,35,49)" rx="2" ry="2" />
<text  x="46.86" y="143.5" ></text>
</g>
<g >
<title>google.golang.org/grpc/internal/transport.(*http2Server).deleteStream (2 samples, 0.21%)</title><rect x="719.8" y="245" width="2.5" height="15.0" fill="rgb(207,215,33)" rx="2" ry="2" />
<text  x="722.76" y="255.5" ></text>
</g>
<g >
<title>runtime.findfunc (1 samples, 0.11%)</title><rect x="594.4" y="69" width="1.2" height="15.0" fill="rgb(253,181,10)" rx="2" ry="2" />
<text  x="597.36" y="79.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.11%)</title><rect x="554.2" y="213" width="1.3" height="15.0" fill="rgb(209,95,25)" rx="2" ry="2" />
<text  x="557.23" y="223.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.11%)</title><rect x="36.3" y="181" width="1.3" height="15.0" fill="rgb(205,85,49)" rx="2" ry="2" />
<text  x="39.33" y="191.5" ></text>
</g>
<g >
<title>os.(*File).write (203 samples, 21.57%)</title><rect x="205.6" y="245" width="254.6" height="15.0" fill="rgb(205,168,37)" rx="2" ry="2" />
<text  x="208.62" y="255.5" >os.(*File).write</text>
</g>
<g >
<title>runtime.memclrNoHeapPointersChunked (30 samples, 3.19%)</title><rect x="616.9" y="229" width="37.6" height="15.0" fill="rgb(242,106,8)" rx="2" ry="2" />
<text  x="619.93" y="239.5" >run..</text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.11%)</title><rect x="586.8" y="101" width="1.3" height="15.0" fill="rgb(220,200,53)" rx="2" ry="2" />
<text  x="589.83" y="111.5" ></text>
</g>
<g >
<title>runtime.(*mcache).prepareForSweep (1 samples, 0.11%)</title><rect x="744.8" y="229" width="1.3" height="15.0" fill="rgb(216,172,31)" rx="2" ry="2" />
<text  x="747.84" y="239.5" ></text>
</g>
<g >
<title>runtime.procresize (1 samples, 0.11%)</title><rect x="743.6" y="245" width="1.2" height="15.0" fill="rgb(208,6,42)" rx="2" ry="2" />
<text  x="746.58" y="255.5" ></text>
</g>
<g >
<title>runtime.stealWork (30 samples, 3.19%)</title><rect x="1128.6" y="277" width="37.6" height="15.0" fill="rgb(223,95,26)" rx="2" ry="2" />
<text  x="1131.55" y="287.5" >run..</text>
</g>
<g >
<title>syscall.Write (202 samples, 21.47%)</title><rect x="206.9" y="229" width="253.3" height="15.0" fill="rgb(250,91,5)" rx="2" ry="2" />
<text  x="209.88" y="239.5" >syscall.Write</text>
</g>
<g >
<title>runtime.goready.func1 (3 samples, 0.32%)</title><rect x="96.5" y="181" width="3.8" height="15.0" fill="rgb(209,227,4)" rx="2" ry="2" />
<text  x="99.52" y="191.5" ></text>
</g>
<g >
<title>runtime.trygetfull (2 samples, 0.21%)</title><rect x="861.5" y="261" width="2.5" height="15.0" fill="rgb(205,31,4)" rx="2" ry="2" />
<text  x="864.46" y="271.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).empty (2 samples, 0.21%)</title><rect x="584.3" y="181" width="2.5" height="15.0" fill="rgb(211,152,0)" rx="2" ry="2" />
<text  x="587.33" y="191.5" ></text>
</g>
<g >
<title>runtime.send (3 samples, 0.32%)</title><rect x="96.5" y="229" width="3.8" height="15.0" fill="rgb(236,148,29)" rx="2" ry="2" />
<text  x="99.52" y="239.5" ></text>
</g>
<g >
<title>net.(*TCPAddr).String (1 samples, 0.11%)</title><rect x="15.0" y="213" width="1.3" height="15.0" fill="rgb(223,208,33)" rx="2" ry="2" />
<text  x="18.02" y="223.5" ></text>
</g>
<g >
<title>runtime.arenaIndex (1 samples, 0.11%)</title><rect x="940.5" y="261" width="1.2" height="15.0" fill="rgb(217,146,5)" rx="2" ry="2" />
<text  x="943.46" y="271.5" ></text>
</g>
<g >
<title>google.golang.org/grpc/internal/transport.newHTTP2Client (2 samples, 0.21%)</title><rect x="655.8" y="277" width="2.5" height="15.0" fill="rgb(224,178,52)" rx="2" ry="2" />
<text  x="658.80" y="287.5" ></text>
</g>
<g >
<title>runtime.findRunnable (5 samples, 0.53%)</title><rect x="1027.0" y="293" width="6.3" height="15.0" fill="rgb(241,91,19)" rx="2" ry="2" />
<text  x="1029.98" y="303.5" ></text>
</g>
<g >
<title>google.golang.org/grpc/internal/transport.NewClientTransport (2 samples, 0.21%)</title><rect x="655.8" y="293" width="2.5" height="15.0" fill="rgb(226,23,8)" rx="2" ry="2" />
<text  x="658.80" y="303.5" ></text>
</g>
<g >
<title>runtime.goready.func1 (1 samples, 0.11%)</title><rect x="84.0" y="181" width="1.2" height="15.0" fill="rgb(215,55,14)" rx="2" ry="2" />
<text  x="86.99" y="191.5" ></text>
</g>
<g >
<title>net.(*netFD).Write (3 samples, 0.32%)</title><rect x="22.5" y="245" width="3.8" height="15.0" fill="rgb(252,199,37)" rx="2" ry="2" />
<text  x="25.54" y="255.5" ></text>
</g>
<g >
<title>runtime.callers.func1 (7 samples, 0.74%)</title><rect x="707.2" y="213" width="8.8" height="15.0" fill="rgb(221,82,54)" rx="2" ry="2" />
<text  x="710.22" y="223.5" ></text>
</g>
<g >
<title>runtime/internal/syscall.Syscall6 (12 samples, 1.28%)</title><rect x="466.5" y="165" width="15.0" height="15.0" fill="rgb(244,196,37)" rx="2" ry="2" />
<text  x="469.45" y="175.5" ></text>
</g>
<g >
<title>github.com/spf13/cobra.(*Command).ExecuteC (3 samples, 0.32%)</title><rect x="1022.0" y="293" width="3.7" height="15.0" fill="rgb(241,215,36)" rx="2" ry="2" />
<text  x="1024.97" y="303.5" ></text>
</g>
<g >
<title>runtime.newproc.func1 (2 samples, 0.21%)</title><rect x="150.4" y="229" width="2.6" height="15.0" fill="rgb(212,143,37)" rx="2" ry="2" />
<text  x="153.45" y="239.5" ></text>
</g>
<g >
<title>runtime.pcvalue (2 samples, 0.21%)</title><rect x="595.6" y="53" width="2.5" height="15.0" fill="rgb(210,222,31)" rx="2" ry="2" />
<text  x="598.61" y="63.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (2 samples, 0.21%)</title><rect x="105.3" y="85" width="2.5" height="15.0" fill="rgb(243,44,6)" rx="2" ry="2" />
<text  x="108.30" y="95.5" ></text>
</g>
<g >
<title>runtime.morestack (3 samples, 0.32%)</title><rect x="1185.0" y="341" width="3.7" height="15.0" fill="rgb(212,169,12)" rx="2" ry="2" />
<text  x="1187.98" y="351.5" ></text>
</g>
<g >
<title>google.golang.org/grpc/internal/transport.(*loopyWriter).outgoingWindowUpdateHandler (2 samples, 0.21%)</title><rect x="723.5" y="309" width="2.5" height="15.0" fill="rgb(248,74,25)" rx="2" ry="2" />
<text  x="726.52" y="319.5" ></text>
</g>
<g >
<title>runtime.memmove (50 samples, 5.31%)</title><rect x="489.0" y="133" width="62.7" height="15.0" fill="rgb(246,9,42)" rx="2" ry="2" />
<text  x="492.02" y="143.5" >runtim..</text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.11%)</title><rect x="1024.5" y="117" width="1.2" height="15.0" fill="rgb(236,116,25)" rx="2" ry="2" />
<text  x="1027.47" y="127.5" ></text>
</g>
<g >
<title>bufio.(*Reader).Read (40 samples, 4.25%)</title><rect x="153.0" y="261" width="50.1" height="15.0" fill="rgb(218,148,48)" rx="2" ry="2" />
<text  x="155.95" y="271.5" >bufio..</text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.11%)</title><rect x="1023.2" y="117" width="1.3" height="15.0" fill="rgb(209,176,31)" rx="2" ry="2" />
<text  x="1026.22" y="127.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.11%)</title><rect x="463.9" y="133" width="1.3" height="15.0" fill="rgb(253,28,34)" rx="2" ry="2" />
<text  x="466.94" y="143.5" ></text>
</g>
<g >
<title>runtime.funcInfo.entry (1 samples, 0.11%)</title><rect x="713.5" y="165" width="1.2" height="15.0" fill="rgb(237,11,46)" rx="2" ry="2" />
<text  x="716.49" y="175.5" ></text>
</g>
<g >
<title>google.golang.org/grpc/internal/transport.(*loopyWriter).headerHandler (3 samples, 0.32%)</title><rect x="719.8" y="293" width="3.7" height="15.0" fill="rgb(214,135,34)" rx="2" ry="2" />
<text  x="722.76" y="303.5" ></text>
</g>
<g >
<title>google.golang.org/grpc.(*Server).handleRawConn.func1 (140 samples, 14.88%)</title><rect x="30.1" y="341" width="175.5" height="15.0" fill="rgb(238,38,13)" rx="2" ry="2" />
<text  x="33.06" y="351.5" >google.golang.org/grpc..</text>
</g>
<g >
<title>runtime.gcAssistAlloc (3 samples, 0.32%)</title><rect x="613.2" y="213" width="3.7" height="15.0" fill="rgb(225,220,2)" rx="2" ry="2" />
<text  x="616.17" y="223.5" ></text>
</g>
<g >
<title>bufio.(*Reader).Read (33 samples, 3.51%)</title><rect x="38.8" y="245" width="41.4" height="15.0" fill="rgb(242,212,16)" rx="2" ry="2" />
<text  x="41.84" y="255.5" >buf..</text>
</g>
<g >
<title>runtime.ready (1 samples, 0.11%)</title><rect x="84.0" y="165" width="1.2" height="15.0" fill="rgb(231,47,3)" rx="2" ry="2" />
<text  x="86.99" y="175.5" ></text>
</g>
<g >
<title>runtime.saveblockevent (7 samples, 0.74%)</title><rect x="707.2" y="261" width="8.8" height="15.0" fill="rgb(252,186,32)" rx="2" ry="2" />
<text  x="710.22" y="271.5" ></text>
</g>
<g >
<title>runtime.findRunnable (1 samples, 0.11%)</title><rect x="1033.3" y="277" width="1.2" height="15.0" fill="rgb(244,212,53)" rx="2" ry="2" />
<text  x="1036.25" y="287.5" ></text>
</g>
<g >
<title>syscall.fcntl (1 samples, 0.11%)</title><rect x="465.2" y="181" width="1.3" height="15.0" fill="rgb(207,37,22)" rx="2" ry="2" />
<text  x="468.20" y="191.5" ></text>
</g>
<g >
<title>syscall.RawSyscall6 (1 samples, 0.11%)</title><rect x="1022.0" y="53" width="1.2" height="15.0" fill="rgb(205,113,27)" rx="2" ry="2" />
<text  x="1024.97" y="63.5" ></text>
</g>
<g >
<title>sync.(*Pool).Get (7 samples, 0.74%)</title><rect x="86.5" y="277" width="8.8" height="15.0" fill="rgb(223,188,3)" rx="2" ry="2" />
<text  x="89.49" y="287.5" ></text>
</g>
<g >
<title>runtime.newstack (1 samples, 0.11%)</title><rect x="28.8" y="277" width="1.3" height="15.0" fill="rgb(221,145,5)" rx="2" ry="2" />
<text  x="31.81" y="287.5" ></text>
</g>
<g >
<title>github.com/pipikai/yun/core/storage/drivers/local.(*Local).Download (1 samples, 0.11%)</title><rect x="10.0" y="325" width="1.3" height="15.0" fill="rgb(227,228,10)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>github.com/pipikai/yun/pb._Storage_Upload_Handler (277 samples, 29.44%)</title><rect x="205.6" y="293" width="347.4" height="15.0" fill="rgb(215,132,1)" rx="2" ry="2" />
<text  x="208.62" y="303.5" >github.com/pipikai/yun/pb._Storage_Upload_Handler</text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.11%)</title><rect x="1187.5" y="245" width="1.2" height="15.0" fill="rgb(243,202,42)" rx="2" ry="2" />
<text  x="1190.49" y="255.5" ></text>
</g>
<g >
<title>google.golang.org/grpc.(*Server).sendResponse (2 samples, 0.21%)</title><rect x="553.0" y="293" width="2.5" height="15.0" fill="rgb(235,182,49)" rx="2" ry="2" />
<text  x="555.98" y="303.5" ></text>
</g>
<g >
<title>google.golang.org/grpc.(*Server).handleRawConn (15 samples, 1.59%)</title><rect x="11.3" y="325" width="18.8" height="15.0" fill="rgb(214,113,24)" rx="2" ry="2" />
<text  x="14.25" y="335.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast (1 samples, 0.11%)</title><rect x="663.3" y="197" width="1.3" height="15.0" fill="rgb(205,23,29)" rx="2" ry="2" />
<text  x="666.33" y="207.5" ></text>
</g>
<g >
<title>runtime.profilealloc (1 samples, 0.11%)</title><rect x="487.8" y="101" width="1.2" height="15.0" fill="rgb(230,109,48)" rx="2" ry="2" />
<text  x="490.77" y="111.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (3 samples, 0.32%)</title><rect x="105.3" y="197" width="3.8" height="15.0" fill="rgb(220,7,7)" rx="2" ry="2" />
<text  x="108.30" y="207.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (4 samples, 0.43%)</title><rect x="1015.7" y="261" width="5.0" height="15.0" fill="rgb(236,9,10)" rx="2" ry="2" />
<text  x="1018.70" y="271.5" ></text>
</g>
<g >
<title>google.golang.org/grpc/internal/transport.(*recvBuffer).load (2 samples, 0.21%)</title><rect x="589.3" y="165" width="2.5" height="15.0" fill="rgb(240,25,54)" rx="2" ry="2" />
<text  x="592.34" y="175.5" ></text>
</g>
<g >
<title>runtime.mapiterinit (1 samples, 0.11%)</title><rect x="146.7" y="245" width="1.2" height="15.0" fill="rgb(221,186,40)" rx="2" ry="2" />
<text  x="149.68" y="255.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.11%)</title><rect x="12.5" y="229" width="1.3" height="15.0" fill="rgb(235,20,35)" rx="2" ry="2" />
<text  x="15.51" y="239.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (1 samples, 0.11%)</title><rect x="663.3" y="213" width="1.3" height="15.0" fill="rgb(209,116,29)" rx="2" ry="2" />
<text  x="666.33" y="223.5" ></text>
</g>
<g >
<title>runtime.typedmemclr (1 samples, 0.11%)</title><rect x="609.4" y="165" width="1.3" height="15.0" fill="rgb(235,163,11)" rx="2" ry="2" />
<text  x="612.40" y="175.5" ></text>
</g>
<g >
<title>runtime.deductAssistCredit (2 samples, 0.21%)</title><rect x="16.3" y="149" width="2.5" height="15.0" fill="rgb(244,138,29)" rx="2" ry="2" />
<text  x="19.27" y="159.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.21%)</title><rect x="144.2" y="165" width="2.5" height="15.0" fill="rgb(240,95,51)" rx="2" ry="2" />
<text  x="147.18" y="175.5" ></text>
</g>
<g >
<title>runtime.systemstack (218 samples, 23.17%)</title><rect x="747.3" y="325" width="273.4" height="15.0" fill="rgb(225,190,30)" rx="2" ry="2" />
<text  x="750.34" y="335.5" >runtime.systemstack</text>
</g>
<g >
<title>runtime.pcvalue (7 samples, 0.74%)</title><rect x="598.1" y="53" width="8.8" height="15.0" fill="rgb(252,170,43)" rx="2" ry="2" />
<text  x="601.12" y="63.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).waitRead (1 samples, 0.11%)</title><rect x="43.9" y="197" width="1.2" height="15.0" fill="rgb(225,215,32)" rx="2" ry="2" />
<text  x="46.86" y="207.5" ></text>
</g>
<g >
<title>syscall.Syscall6 (12 samples, 1.28%)</title><rect x="466.5" y="197" width="15.0" height="15.0" fill="rgb(211,163,35)" rx="2" ry="2" />
<text  x="469.45" y="207.5" ></text>
</g>
<g >
<title>sync.(*Pool).Put (2 samples, 0.21%)</title><rect x="586.8" y="149" width="2.5" height="15.0" fill="rgb(238,208,8)" rx="2" ry="2" />
<text  x="589.83" y="159.5" ></text>
</g>
<g >
<title>runtime.madvise (4 samples, 0.43%)</title><rect x="728.5" y="197" width="5.0" height="15.0" fill="rgb(230,52,42)" rx="2" ry="2" />
<text  x="731.53" y="207.5" ></text>
</g>
<g >
<title>runtime.pidleput (2 samples, 0.21%)</title><rect x="1124.8" y="277" width="2.5" height="15.0" fill="rgb(226,14,17)" rx="2" ry="2" />
<text  x="1127.79" y="287.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.11%)</title><rect x="27.6" y="229" width="1.2" height="15.0" fill="rgb(243,103,14)" rx="2" ry="2" />
<text  x="30.56" y="239.5" ></text>
</g>
<g >
<title>golang.org/x/net/http2.(*Framer).checkFrameOrder (2 samples, 0.21%)</title><rect x="32.6" y="277" width="2.5" height="15.0" fill="rgb(227,6,29)" rx="2" ry="2" />
<text  x="35.57" y="287.5" ></text>
</g>
<g >
<title>runtime.gentraceback (10 samples, 1.06%)</title><rect x="594.4" y="85" width="12.5" height="15.0" fill="rgb(219,12,34)" rx="2" ry="2" />
<text  x="597.36" y="95.5" ></text>
</g>
<g >
<title>runtime/internal/syscall.Syscall6 (202 samples, 21.47%)</title><rect x="206.9" y="165" width="253.3" height="15.0" fill="rgb(234,43,29)" rx="2" ry="2" />
<text  x="209.88" y="175.5" >runtime/internal/syscall.Syscall6</text>
</g>
<g >
<title>runtime.checkRunqsNoP (2 samples, 0.21%)</title><rect x="1072.1" y="277" width="2.5" height="15.0" fill="rgb(254,3,11)" rx="2" ry="2" />
<text  x="1075.13" y="287.5" ></text>
</g>
<g >
<title>net.ipEmptyString (2 samples, 0.21%)</title><rect x="16.3" y="213" width="2.5" height="15.0" fill="rgb(211,192,15)" rx="2" ry="2" />
<text  x="19.27" y="223.5" ></text>
</g>
<g >
<title>net.(*Dialer).DialContext (2 samples, 0.21%)</title><rect x="655.8" y="229" width="2.5" height="15.0" fill="rgb(226,106,22)" rx="2" ry="2" />
<text  x="658.80" y="239.5" ></text>
</g>
<g >
<title>runtime.ifaceeq (1 samples, 0.11%)</title><rect x="45.1" y="181" width="1.3" height="15.0" fill="rgb(236,23,6)" rx="2" ry="2" />
<text  x="48.11" y="191.5" ></text>
</g>
<g >
<title>runtime.pageIndexOf (16 samples, 1.70%)</title><rect x="994.4" y="261" width="20.0" height="15.0" fill="rgb(215,41,4)" rx="2" ry="2" />
<text  x="997.38" y="271.5" ></text>
</g>
<g >
<title>runtime.sysUnusedOS (4 samples, 0.43%)</title><rect x="728.5" y="213" width="5.0" height="15.0" fill="rgb(237,177,35)" rx="2" ry="2" />
<text  x="731.53" y="223.5" ></text>
</g>
<g >
<title>google.golang.org/grpc/internal/transport.(*recvBufferReader).read (46 samples, 4.89%)</title><rect x="555.5" y="197" width="57.7" height="15.0" fill="rgb(221,82,54)" rx="2" ry="2" />
<text  x="558.48" y="207.5" >google..</text>
</g>
<g >
<title>net.(*netFD).Read (31 samples, 3.29%)</title><rect x="153.0" y="229" width="38.8" height="15.0" fill="rgb(223,98,22)" rx="2" ry="2" />
<text  x="155.95" y="239.5" >net..</text>
</g>
<g >
<title>google.golang.org/grpc/internal/transport.(*controlBuffer).get (13 samples, 1.38%)</title><rect x="702.2" y="309" width="16.3" height="15.0" fill="rgb(217,139,42)" rx="2" ry="2" />
<text  x="705.20" y="319.5" ></text>
</g>
<g >
<title>runtime.mapiternext (1 samples, 0.11%)</title><rect x="146.7" y="229" width="1.2" height="15.0" fill="rgb(209,204,1)" rx="2" ry="2" />
<text  x="149.68" y="239.5" ></text>
</g>
<g >
<title>runtime.(*randomEnum).done (1 samples, 0.11%)</title><rect x="1048.3" y="277" width="1.3" height="15.0" fill="rgb(222,106,5)" rx="2" ry="2" />
<text  x="1051.30" y="287.5" ></text>
</g>
<g >
<title>runtime.mget (1 samples, 0.11%)</title><rect x="104.0" y="181" width="1.3" height="15.0" fill="rgb(235,104,44)" rx="2" ry="2" />
<text  x="107.05" y="191.5" ></text>
</g>
<g >
<title>google.golang.org/grpc/internal/transport.(*http2Server).HandleStreams (140 samples, 14.88%)</title><rect x="30.1" y="309" width="175.5" height="15.0" fill="rgb(211,152,5)" rx="2" ry="2" />
<text  x="33.06" y="319.5" >google.golang.org/grpc..</text>
</g>
<g >
<title>runtime.futex (1 samples, 0.11%)</title><rect x="1033.3" y="213" width="1.2" height="15.0" fill="rgb(214,101,28)" rx="2" ry="2" />
<text  x="1036.25" y="223.5" ></text>
</g>
<g >
<title>net.(*netFD).Close (2 samples, 0.21%)</title><rect x="101.5" y="261" width="2.5" height="15.0" fill="rgb(215,0,4)" rx="2" ry="2" />
<text  x="104.54" y="271.5" ></text>
</g>
<g >
<title>runtime.gentraceback (3 samples, 0.32%)</title><rect x="40.1" y="149" width="3.8" height="15.0" fill="rgb(253,191,36)" rx="2" ry="2" />
<text  x="43.10" y="159.5" ></text>
</g>
<g >
<title>sync/atomic.CompareAndSwapPointer (1 samples, 0.11%)</title><rect x="655.8" y="149" width="1.3" height="15.0" fill="rgb(225,80,52)" rx="2" ry="2" />
<text  x="658.80" y="159.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).init (1 samples, 0.11%)</title><rect x="848.9" y="261" width="1.3" height="15.0" fill="rgb(244,121,0)" rx="2" ry="2" />
<text  x="851.92" y="271.5" ></text>
</g>
<g >
<title>google.golang.org/grpc/internal/transport.(*recvBuffer).put (2 samples, 0.21%)</title><rect x="82.7" y="277" width="2.5" height="15.0" fill="rgb(247,133,24)" rx="2" ry="2" />
<text  x="85.73" y="287.5" ></text>
</g>
<g >
<title>fmt.(*pp).printArg (1 samples, 0.11%)</title><rect x="20.0" y="213" width="1.3" height="15.0" fill="rgb(205,215,24)" rx="2" ry="2" />
<text  x="23.03" y="223.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast (1 samples, 0.11%)</title><rect x="47.6" y="133" width="1.3" height="15.0" fill="rgb(228,39,12)" rx="2" ry="2" />
<text  x="50.62" y="143.5" ></text>
</g>
<g >
<title>runtime.(*pageCache).alloc (1 samples, 0.11%)</title><rect x="106.6" y="69" width="1.2" height="15.0" fill="rgb(237,99,24)" rx="2" ry="2" />
<text  x="109.56" y="79.5" ></text>
</g>
<g >
<title>runtime.getitab (1 samples, 0.11%)</title><rect x="703.5" y="277" width="1.2" height="15.0" fill="rgb(224,33,15)" rx="2" ry="2" />
<text  x="706.45" y="287.5" ></text>
</g>
<g >
<title>syscall.Accept4 (1 samples, 0.11%)</title><rect x="1022.0" y="101" width="1.2" height="15.0" fill="rgb(245,211,41)" rx="2" ry="2" />
<text  x="1024.97" y="111.5" ></text>
</g>
<g >
<title>google.golang.org/grpc/internal/transport.(*recvBufferReader).readAdditional (5 samples, 0.53%)</title><rect x="586.8" y="181" width="6.3" height="15.0" fill="rgb(214,102,43)" rx="2" ry="2" />
<text  x="589.83" y="191.5" ></text>
</g>
<g >
<title>runtime.readvarint (1 samples, 0.11%)</title><rect x="41.3" y="101" width="1.3" height="15.0" fill="rgb(237,26,1)" rx="2" ry="2" />
<text  x="44.35" y="111.5" ></text>
</g>
<g >
<title>runtime.scanobject (84 samples, 8.93%)</title><rect x="910.4" y="277" width="105.3" height="15.0" fill="rgb(246,102,32)" rx="2" ry="2" />
<text  x="913.36" y="287.5" >runtime.scan..</text>
</g>
<g >
<title>google.golang.org/grpc/internal/transport.(*loopyWriter).handle (3 samples, 0.32%)</title><rect x="719.8" y="309" width="3.7" height="15.0" fill="rgb(205,92,26)" rx="2" ry="2" />
<text  x="722.76" y="319.5" ></text>
</g>
<g >
<title>runtime.findRunnable (103 samples, 10.95%)</title><rect x="1042.0" y="293" width="129.2" height="15.0" fill="rgb(214,98,46)" rx="2" ry="2" />
<text  x="1045.03" y="303.5" >runtime.findRunn..</text>
</g>
<g >
<title>google.golang.org/grpc/internal/transport.dial (2 samples, 0.21%)</title><rect x="655.8" y="261" width="2.5" height="15.0" fill="rgb(218,221,36)" rx="2" ry="2" />
<text  x="658.80" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mspan).refillAllocCache (1 samples, 0.11%)</title><rect x="463.9" y="117" width="1.3" height="15.0" fill="rgb(244,63,10)" rx="2" ry="2" />
<text  x="466.94" y="127.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).prepareWrite (1 samples, 0.11%)</title><rect x="662.1" y="261" width="1.2" height="15.0" fill="rgb(229,9,53)" rx="2" ry="2" />
<text  x="665.07" y="271.5" ></text>
</g>
<g >
<title>google.golang.org/grpc/internal/transport.(*http2Server).handleData (29 samples, 3.08%)</title><rect x="105.3" y="293" width="36.4" height="15.0" fill="rgb(208,64,26)" rx="2" ry="2" />
<text  x="108.30" y="303.5" >goo..</text>
</g>
<g >
<title>runtime.chansend (1 samples, 0.11%)</title><rect x="84.0" y="245" width="1.2" height="15.0" fill="rgb(216,177,45)" rx="2" ry="2" />
<text  x="86.99" y="255.5" ></text>
</g>
<g >
<title>runtime/internal/syscall.EpollCtl (1 samples, 0.11%)</title><rect x="101.5" y="181" width="1.3" height="15.0" fill="rgb(253,102,11)" rx="2" ry="2" />
<text  x="104.54" y="191.5" ></text>
</g>
<g >
<title>time.Now (1 samples, 0.11%)</title><rect x="657.1" y="181" width="1.2" height="15.0" fill="rgb(254,96,19)" rx="2" ry="2" />
<text  x="660.06" y="191.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).Read (23 samples, 2.44%)</title><rect x="555.5" y="181" width="28.8" height="15.0" fill="rgb(245,123,16)" rx="2" ry="2" />
<text  x="558.48" y="191.5" >by..</text>
</g>
<g >
<title>runtime.stealWork (1 samples, 0.11%)</title><rect x="1032.0" y="277" width="1.3" height="15.0" fill="rgb(212,157,23)" rx="2" ry="2" />
<text  x="1035.00" y="287.5" ></text>
</g>
<g >
<title>net.(*netFD).accept (2 samples, 0.21%)</title><rect x="1022.0" y="149" width="2.5" height="15.0" fill="rgb(213,67,13)" rx="2" ry="2" />
<text  x="1024.97" y="159.5" ></text>
</g>
<g >
<title>runtime/internal/syscall.Syscall6 (1 samples, 0.11%)</title><rect x="1022.0" y="37" width="1.2" height="15.0" fill="rgb(222,88,44)" rx="2" ry="2" />
<text  x="1024.97" y="47.5" ></text>
</g>
<g >
<title>runtime/internal/syscall.Syscall6 (2 samples, 0.21%)</title><rect x="1029.5" y="245" width="2.5" height="15.0" fill="rgb(214,123,23)" rx="2" ry="2" />
<text  x="1032.49" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (3 samples, 0.32%)</title><rect x="105.3" y="181" width="3.8" height="15.0" fill="rgb(206,205,7)" rx="2" ry="2" />
<text  x="108.30" y="191.5" ></text>
</g>
<g >
<title>runtime.bgscavenge (5 samples, 0.53%)</title><rect x="727.3" y="341" width="6.2" height="15.0" fill="rgb(226,148,2)" rx="2" ry="2" />
<text  x="730.28" y="351.5" ></text>
</g>
<g >
<title>runtime.goready (1 samples, 0.11%)</title><rect x="84.0" y="213" width="1.2" height="15.0" fill="rgb(215,219,27)" rx="2" ry="2" />
<text  x="86.99" y="223.5" ></text>
</g>
<g >
<title>runtime.markrootSpans (1 samples, 0.11%)</title><rect x="909.1" y="261" width="1.3" height="15.0" fill="rgb(251,224,10)" rx="2" ry="2" />
<text  x="912.11" y="271.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.11%)</title><rect x="27.6" y="245" width="1.2" height="15.0" fill="rgb(230,221,32)" rx="2" ry="2" />
<text  x="30.56" y="255.5" ></text>
</g>
<g >
<title>net.(*TCPListener).accept (3 samples, 0.32%)</title><rect x="1022.0" y="165" width="3.7" height="15.0" fill="rgb(224,163,25)" rx="2" ry="2" />
<text  x="1024.97" y="175.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).Write (26 samples, 2.76%)</title><rect x="105.3" y="277" width="32.6" height="15.0" fill="rgb(236,65,29)" rx="2" ry="2" />
<text  x="108.30" y="287.5" >by..</text>
</g>
<g >
<title>runtime.notesleep (1 samples, 0.11%)</title><rect x="1028.2" y="261" width="1.3" height="15.0" fill="rgb(231,15,1)" rx="2" ry="2" />
<text  x="1031.24" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mspan).init (1 samples, 0.11%)</title><rect x="722.3" y="53" width="1.2" height="15.0" fill="rgb(211,62,50)" rx="2" ry="2" />
<text  x="725.26" y="63.5" ></text>
</g>
<g >
<title>syscall.RawSyscall6 (12 samples, 1.28%)</title><rect x="466.5" y="181" width="15.0" height="15.0" fill="rgb(222,51,39)" rx="2" ry="2" />
<text  x="469.45" y="191.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination (2 samples, 0.21%)</title><rect x="743.6" y="309" width="2.5" height="15.0" fill="rgb(209,83,42)" rx="2" ry="2" />
<text  x="746.58" y="319.5" ></text>
</g>
<g >
<title>runtime.scanframeworker (7 samples, 0.74%)</title><rect x="884.0" y="197" width="8.8" height="15.0" fill="rgb(207,117,44)" rx="2" ry="2" />
<text  x="887.03" y="207.5" ></text>
</g>
<g >
<title>io.ReadAtLeast (33 samples, 3.51%)</title><rect x="38.8" y="261" width="41.4" height="15.0" fill="rgb(246,99,25)" rx="2" ry="2" />
<text  x="41.84" y="271.5" >io...</text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.11%)</title><rect x="37.6" y="245" width="1.2" height="15.0" fill="rgb(213,203,47)" rx="2" ry="2" />
<text  x="40.59" y="255.5" ></text>
</g>
<g >
<title>syscall.accept4 (1 samples, 0.11%)</title><rect x="1022.0" y="85" width="1.2" height="15.0" fill="rgb(232,47,5)" rx="2" ry="2" />
<text  x="1024.97" y="95.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.11%)</title><rect x="722.3" y="165" width="1.2" height="15.0" fill="rgb(232,227,44)" rx="2" ry="2" />
<text  x="725.26" y="175.5" ></text>
</g>
<g >
<title>runtime.step (1 samples, 0.11%)</title><rect x="596.9" y="37" width="1.2" height="15.0" fill="rgb(209,5,19)" rx="2" ry="2" />
<text  x="599.87" y="47.5" ></text>
</g>
<g >
<title>google.golang.org/grpc/internal/transport.(*http2Server).WriteHeader (1 samples, 0.11%)</title><rect x="554.2" y="261" width="1.3" height="15.0" fill="rgb(238,77,34)" rx="2" ry="2" />
<text  x="557.23" y="271.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.marshalAppend (1 samples, 0.11%)</title><rect x="553.0" y="245" width="1.2" height="15.0" fill="rgb(221,56,14)" rx="2" ry="2" />
<text  x="555.98" y="255.5" ></text>
</g>
<g >
<title>google.golang.org/grpc.(*Server).handleStream (359 samples, 38.15%)</title><rect x="205.6" y="325" width="450.2" height="15.0" fill="rgb(222,168,8)" rx="2" ry="2" />
<text  x="208.62" y="335.5" >google.golang.org/grpc.(*Server).handleStream</text>
</g>
<g >
<title>google.golang.org/grpc/internal/transport.(*bufWriter).Flush (33 samples, 3.51%)</title><rect x="660.8" y="309" width="41.4" height="15.0" fill="rgb(241,95,0)" rx="2" ry="2" />
<text  x="663.82" y="319.5" >goo..</text>
</g>
<g >
<title>runtime.(*scavengerState).run (5 samples, 0.53%)</title><rect x="727.3" y="325" width="6.2" height="15.0" fill="rgb(206,99,51)" rx="2" ry="2" />
<text  x="730.28" y="335.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.11%)</title><rect x="84.0" y="85" width="1.2" height="15.0" fill="rgb(223,226,45)" rx="2" ry="2" />
<text  x="86.99" y="95.5" ></text>
</g>
<g >
<title>runtime.copystack (3 samples, 0.32%)</title><rect x="40.1" y="165" width="3.8" height="15.0" fill="rgb(236,166,5)" rx="2" ry="2" />
<text  x="43.10" y="175.5" ></text>
</g>
<g >
<title>google.golang.org/grpc/internal/transport.(*controlBuffer).executeAndPut (2 samples, 0.21%)</title><rect x="144.2" y="245" width="2.5" height="15.0" fill="rgb(246,192,50)" rx="2" ry="2" />
<text  x="147.18" y="255.5" ></text>
</g>
<g >
<title>net.(*conn).Read (32 samples, 3.40%)</title><rect x="40.1" y="229" width="40.1" height="15.0" fill="rgb(248,79,44)" rx="2" ry="2" />
<text  x="43.10" y="239.5" >net..</text>
</g>
<g >
<title>runtime.(*gcWork).balance (41 samples, 4.36%)</title><rect x="797.5" y="277" width="51.4" height="15.0" fill="rgb(225,63,17)" rx="2" ry="2" />
<text  x="800.50" y="287.5" >runti..</text>
</g>
<g >
<title>runtime.(*mspan).ensureSwept (1 samples, 0.11%)</title><rect x="462.7" y="117" width="1.2" height="15.0" fill="rgb(249,122,5)" rx="2" ry="2" />
<text  x="465.69" y="127.5" ></text>
</g>
<g >
<title>syscall.openat (12 samples, 1.28%)</title><rect x="466.5" y="213" width="15.0" height="15.0" fill="rgb(213,108,16)" rx="2" ry="2" />
<text  x="469.45" y="223.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker (222 samples, 23.59%)</title><rect x="742.3" y="341" width="278.4" height="15.0" fill="rgb(227,39,5)" rx="2" ry="2" />
<text  x="745.33" y="351.5" >runtime.gcBgMarkWorker</text>
</g>
<g >
<title>runtime.heapBits.nextFast (5 samples, 0.53%)</title><rect x="865.2" y="277" width="6.3" height="15.0" fill="rgb(233,208,48)" rx="2" ry="2" />
<text  x="868.22" y="287.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).push (5 samples, 0.53%)</title><rect x="855.2" y="245" width="6.3" height="15.0" fill="rgb(210,173,50)" rx="2" ry="2" />
<text  x="858.19" y="255.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Unlock (1 samples, 0.11%)</title><rect x="591.8" y="165" width="1.3" height="15.0" fill="rgb(247,17,34)" rx="2" ry="2" />
<text  x="594.85" y="175.5" ></text>
</g>
<g >
<title>runtime.scanobject (1 samples, 0.11%)</title><rect x="110.3" y="101" width="1.3" height="15.0" fill="rgb(244,186,21)" rx="2" ry="2" />
<text  x="113.32" y="111.5" ></text>
</g>
<g >
<title>runtime.(*waitq).dequeue (1 samples, 0.11%)</title><rect x="95.3" y="245" width="1.2" height="15.0" fill="rgb(227,169,16)" rx="2" ry="2" />
<text  x="98.27" y="255.5" ></text>
</g>
<g >
<title>google.golang.org/grpc/internal/transport.(*loopyWriter).cleanupStreamHandler (2 samples, 0.21%)</title><rect x="719.8" y="277" width="2.5" height="15.0" fill="rgb(240,228,19)" rx="2" ry="2" />
<text  x="722.76" y="287.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).tryGet (12 samples, 1.28%)</title><rect x="848.9" y="277" width="15.1" height="15.0" fill="rgb(254,90,48)" rx="2" ry="2" />
<text  x="851.92" y="287.5" ></text>
</g>
<g >
<title>runtime.callers (7 samples, 0.74%)</title><rect x="707.2" y="245" width="8.8" height="15.0" fill="rgb(217,183,23)" rx="2" ry="2" />
<text  x="710.22" y="255.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Write (1 samples, 0.11%)</title><rect x="205.6" y="229" width="1.3" height="15.0" fill="rgb(218,214,4)" rx="2" ry="2" />
<text  x="208.62" y="239.5" ></text>
</g>
<g >
<title>syscall.write (3 samples, 0.32%)</title><rect x="22.5" y="213" width="3.8" height="15.0" fill="rgb(207,81,41)" rx="2" ry="2" />
<text  x="25.54" y="223.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_fast32 (1 samples, 0.11%)</title><rect x="137.9" y="261" width="1.3" height="15.0" fill="rgb(208,142,38)" rx="2" ry="2" />
<text  x="140.91" y="271.5" ></text>
</g>
<g >
<title>runtime.schedule (3 samples, 0.32%)</title><rect x="1033.3" y="293" width="3.7" height="15.0" fill="rgb(239,59,7)" rx="2" ry="2" />
<text  x="1036.25" y="303.5" ></text>
</g>
<g >
<title>sync.loadPoolChainElt (1 samples, 0.11%)</title><rect x="94.0" y="245" width="1.3" height="15.0" fill="rgb(225,106,8)" rx="2" ry="2" />
<text  x="97.02" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mcache).prepareForSweep (2 samples, 0.21%)</title><rect x="1068.4" y="261" width="2.5" height="15.0" fill="rgb(232,197,48)" rx="2" ry="2" />
<text  x="1071.36" y="271.5" ></text>
</g>
<g >
<title>runtime.(*randomEnum).next (15 samples, 1.59%)</title><rect x="1049.6" y="277" width="18.8" height="15.0" fill="rgb(227,74,28)" rx="2" ry="2" />
<text  x="1052.55" y="287.5" ></text>
</g>
<g >
<title>runtime.schedule (117 samples, 12.43%)</title><rect x="1038.3" y="309" width="146.7" height="15.0" fill="rgb(232,84,15)" rx="2" ry="2" />
<text  x="1041.27" y="319.5" >runtime.schedule</text>
</g>
<g >
<title>runtime.pidleput (1 samples, 0.11%)</title><rect x="743.6" y="229" width="1.2" height="15.0" fill="rgb(254,166,46)" rx="2" ry="2" />
<text  x="746.58" y="239.5" ></text>
</g>
<g >
<title>runtime.finishsweep_m (1 samples, 0.11%)</title><rect x="485.3" y="53" width="1.2" height="15.0" fill="rgb(208,203,30)" rx="2" ry="2" />
<text  x="488.26" y="63.5" ></text>
</g>
<g >
<title>internal/testlog.Open (1 samples, 0.11%)</title><rect x="460.2" y="229" width="1.2" height="15.0" fill="rgb(234,65,48)" rx="2" ry="2" />
<text  x="463.18" y="239.5" ></text>
</g>
<g >
<title>runtime.acquirep (2 samples, 0.21%)</title><rect x="1068.4" y="277" width="2.5" height="15.0" fill="rgb(219,10,20)" rx="2" ry="2" />
<text  x="1071.36" y="287.5" ></text>
</g>
<g >
<title>runtime.mallocgc (5 samples, 0.53%)</title><rect x="105.3" y="213" width="6.3" height="15.0" fill="rgb(218,15,53)" rx="2" ry="2" />
<text  x="108.30" y="223.5" ></text>
</g>
<g >
<title>google.golang.org/grpc/encoding.GetCodec (1 samples, 0.11%)</title><rect x="551.7" y="277" width="1.3" height="15.0" fill="rgb(234,31,50)" rx="2" ry="2" />
<text  x="554.72" y="287.5" ></text>
</g>
<g >
<title>runtime.slicebytetostring (2 samples, 0.21%)</title><rect x="16.3" y="181" width="2.5" height="15.0" fill="rgb(209,199,2)" rx="2" ry="2" />
<text  x="19.27" y="191.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (1 samples, 0.11%)</title><rect x="1126.0" y="261" width="1.3" height="15.0" fill="rgb(250,57,30)" rx="2" ry="2" />
<text  x="1129.05" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.11%)</title><rect x="463.9" y="149" width="1.3" height="15.0" fill="rgb(231,55,41)" rx="2" ry="2" />
<text  x="466.94" y="159.5" ></text>
</g>
<g >
<title>runtime.tgkill (6 samples, 0.64%)</title><rect x="797.5" y="213" width="7.5" height="15.0" fill="rgb(207,169,38)" rx="2" ry="2" />
<text  x="800.50" y="223.5" ></text>
</g>
<g >
<title>google.golang.org/grpc/internal/transport.(*http2Server).finishStream.func1 (2 samples, 0.21%)</title><rect x="719.8" y="261" width="2.5" height="15.0" fill="rgb(251,192,29)" rx="2" ry="2" />
<text  x="722.76" y="271.5" ></text>
</g>
<g >
<title>runtime.stopm (1 samples, 0.11%)</title><rect x="1166.2" y="277" width="1.2" height="15.0" fill="rgb(222,194,41)" rx="2" ry="2" />
<text  x="1169.17" y="287.5" ></text>
</g>
<g >
<title>golang.org/x/net/http2.NewFramer.func2 (1 samples, 0.11%)</title><rect x="37.6" y="277" width="1.2" height="15.0" fill="rgb(245,149,24)" rx="2" ry="2" />
<text  x="40.59" y="287.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointersChunked (1 samples, 0.11%)</title><rect x="10.0" y="261" width="1.3" height="15.0" fill="rgb(212,73,50)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.11%)</title><rect x="608.2" y="149" width="1.2" height="15.0" fill="rgb(236,84,31)" rx="2" ry="2" />
<text  x="611.15" y="159.5" ></text>
</g>
<g >
<title>runtime.preemptM (4 samples, 0.43%)</title><rect x="876.5" y="245" width="5.0" height="15.0" fill="rgb(217,179,33)" rx="2" ry="2" />
<text  x="879.50" y="255.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.11%)</title><rect x="12.5" y="245" width="1.3" height="15.0" fill="rgb(246,157,37)" rx="2" ry="2" />
<text  x="15.51" y="255.5" ></text>
</g>
<g >
<title>internal/poll.ignoringEINTRIO (1 samples, 0.11%)</title><rect x="45.1" y="197" width="1.3" height="15.0" fill="rgb(237,162,13)" rx="2" ry="2" />
<text  x="48.11" y="207.5" ></text>
</g>
<g >
<title>syscall.Read (27 samples, 2.87%)</title><rect x="46.4" y="197" width="33.8" height="15.0" fill="rgb(245,153,31)" rx="2" ry="2" />
<text  x="49.37" y="207.5" >sy..</text>
</g>
<g >
<title>runtime.signalM (6 samples, 0.64%)</title><rect x="797.5" y="229" width="7.5" height="15.0" fill="rgb(223,59,3)" rx="2" ry="2" />
<text  x="800.50" y="239.5" ></text>
</g>
<g >
<title>runtime.spanClass.noscan (1 samples, 0.11%)</title><rect x="1014.4" y="261" width="1.3" height="15.0" fill="rgb(254,169,31)" rx="2" ry="2" />
<text  x="1017.44" y="271.5" ></text>
</g>
<g >
<title>runtime.funcspdelta (1 samples, 0.11%)</title><rect x="881.5" y="213" width="1.3" height="15.0" fill="rgb(245,40,49)" rx="2" ry="2" />
<text  x="884.52" y="223.5" ></text>
</g>
<g >
<title>google.golang.org/protobuf/internal/impl.consumeBytesNoZero (54 samples, 5.74%)</title><rect x="484.0" y="149" width="67.7" height="15.0" fill="rgb(248,112,5)" rx="2" ry="2" />
<text  x="487.01" y="159.5" >google...</text>
</g>
<g >
<title>syscall.Syscall (3 samples, 0.32%)</title><rect x="22.5" y="197" width="3.8" height="15.0" fill="rgb(222,10,23)" rx="2" ry="2" />
<text  x="25.54" y="207.5" ></text>
</g>
<g >
<title>net.newTCPConn (1 samples, 0.11%)</title><rect x="1024.5" y="149" width="1.2" height="15.0" fill="rgb(218,207,50)" rx="2" ry="2" />
<text  x="1027.47" y="159.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).scavenge.func1 (5 samples, 0.53%)</title><rect x="727.3" y="261" width="6.2" height="15.0" fill="rgb(223,29,37)" rx="2" ry="2" />
<text  x="730.28" y="271.5" ></text>
</g>
<g >
<title>runtime.greyobject (1 samples, 0.11%)</title><rect x="110.3" y="85" width="1.3" height="15.0" fill="rgb(221,41,27)" rx="2" ry="2" />
<text  x="113.32" y="95.5" ></text>
</g>
<g >
<title>google.golang.org/grpc/internal/channelz.RegisterNormalSocket (2 samples, 0.21%)</title><rect x="18.8" y="277" width="2.5" height="15.0" fill="rgb(221,11,47)" rx="2" ry="2" />
<text  x="21.78" y="287.5" ></text>
</g>
<g >
<title>runtime.spanOf (1 samples, 0.11%)</title><rect x="481.5" y="229" width="1.3" height="15.0" fill="rgb(254,30,15)" rx="2" ry="2" />
<text  x="484.50" y="239.5" ></text>
</g>
<g >
<title>fmt.(*pp).handleMethods (3 samples, 0.32%)</title><rect x="15.0" y="229" width="3.8" height="15.0" fill="rgb(247,57,21)" rx="2" ry="2" />
<text  x="18.02" y="239.5" ></text>
</g>
<g >
<title>google.golang.org/grpc.(*Server).processUnaryRPC (358 samples, 38.04%)</title><rect x="205.6" y="309" width="448.9" height="15.0" fill="rgb(252,148,26)" rx="2" ry="2" />
<text  x="208.62" y="319.5" >google.golang.org/grpc.(*Server).processUnaryRPC</text>
</g>
<g >
<title>net.(*TCPListener).Accept (3 samples, 0.32%)</title><rect x="1022.0" y="181" width="3.7" height="15.0" fill="rgb(237,119,54)" rx="2" ry="2" />
<text  x="1024.97" y="191.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (3 samples, 0.32%)</title><rect x="613.2" y="149" width="3.7" height="15.0" fill="rgb(208,186,15)" rx="2" ry="2" />
<text  x="616.17" y="159.5" ></text>
</g>
<g >
<title>runtime.memmove (9 samples, 0.96%)</title><rect x="191.8" y="245" width="11.3" height="15.0" fill="rgb(237,10,45)" rx="2" ry="2" />
<text  x="194.83" y="255.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).scavenge (5 samples, 0.53%)</title><rect x="727.3" y="293" width="6.2" height="15.0" fill="rgb(222,9,35)" rx="2" ry="2" />
<text  x="730.28" y="303.5" ></text>
</g>
<g >
<title>syscall.RawSyscall6 (30 samples, 3.19%)</title><rect x="154.2" y="165" width="37.6" height="15.0" fill="rgb(249,11,34)" rx="2" ry="2" />
<text  x="157.21" y="175.5" >sys..</text>
</g>
<g >
<title>runtime.(*gcWork).balance (1 samples, 0.11%)</title><rect x="613.2" y="133" width="1.2" height="15.0" fill="rgb(214,49,4)" rx="2" ry="2" />
<text  x="616.17" y="143.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint64).CompareAndSwap (1 samples, 0.11%)</title><rect x="736.1" y="293" width="1.2" height="15.0" fill="rgb(214,200,13)" rx="2" ry="2" />
<text  x="739.06" y="303.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).empty (1 samples, 0.11%)</title><rect x="1047.0" y="277" width="1.3" height="15.0" fill="rgb(217,140,49)" rx="2" ry="2" />
<text  x="1050.05" y="287.5" ></text>
</g>
<g >
<title>runtime.systemstack (10 samples, 1.06%)</title><rect x="594.4" y="117" width="12.5" height="15.0" fill="rgb(205,52,43)" rx="2" ry="2" />
<text  x="597.36" y="127.5" ></text>
</g>
<g >
<title>google.golang.org/protobuf/proto.MarshalOptions.MarshalAppend (1 samples, 0.11%)</title><rect x="553.0" y="229" width="1.2" height="15.0" fill="rgb(232,92,33)" rx="2" ry="2" />
<text  x="555.98" y="239.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (2 samples, 0.21%)</title><rect x="1182.5" y="293" width="2.5" height="15.0" fill="rgb(231,105,9)" rx="2" ry="2" />
<text  x="1185.48" y="303.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.11%)</title><rect x="26.3" y="261" width="1.3" height="15.0" fill="rgb(247,58,48)" rx="2" ry="2" />
<text  x="29.30" y="271.5" ></text>
</g>
<g >
<title>runtime.chansend (2 samples, 0.21%)</title><rect x="144.2" y="213" width="2.5" height="15.0" fill="rgb(226,120,32)" rx="2" ry="2" />
<text  x="147.18" y="223.5" ></text>
</g>
<g >
<title>google.golang.org/grpc/internal/transport.(*itemList).enqueue (1 samples, 0.11%)</title><rect x="100.3" y="277" width="1.2" height="15.0" fill="rgb(233,130,52)" rx="2" ry="2" />
<text  x="103.29" y="287.5" ></text>
</g>
<g >
<title>runtime.memmove (14 samples, 1.49%)</title><rect x="120.4" y="261" width="17.5" height="15.0" fill="rgb(209,185,16)" rx="2" ry="2" />
<text  x="123.35" y="271.5" ></text>
</g>
<g >
<title>runtime.write1 (2 samples, 0.21%)</title><rect x="1109.7" y="245" width="2.6" height="15.0" fill="rgb(214,24,3)" rx="2" ry="2" />
<text  x="1112.74" y="255.5" ></text>
</g>
<g >
<title>runtime.mallocgc (33 samples, 3.51%)</title><rect x="613.2" y="245" width="41.3" height="15.0" fill="rgb(247,6,14)" rx="2" ry="2" />
<text  x="616.17" y="255.5" >run..</text>
</g>
<g >
<title>net.(*conn).Write (3 samples, 0.32%)</title><rect x="22.5" y="261" width="3.8" height="15.0" fill="rgb(227,109,35)" rx="2" ry="2" />
<text  x="25.54" y="271.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).push (1 samples, 0.11%)</title><rect x="828.9" y="213" width="1.2" height="15.0" fill="rgb(213,166,28)" rx="2" ry="2" />
<text  x="831.85" y="223.5" ></text>
</g>
<g >
<title>google.golang.org/grpc/internal/transport.proxyDial (2 samples, 0.21%)</title><rect x="655.8" y="245" width="2.5" height="15.0" fill="rgb(243,21,40)" rx="2" ry="2" />
<text  x="658.80" y="255.5" ></text>
</g>
<g >
<title>runtime.notewakeup (2 samples, 0.21%)</title><rect x="1180.0" y="245" width="2.5" height="15.0" fill="rgb(219,15,15)" rx="2" ry="2" />
<text  x="1182.97" y="255.5" ></text>
</g>
<g >
<title>runtime.gopark (1 samples, 0.11%)</title><rect x="746.1" y="325" width="1.2" height="15.0" fill="rgb(242,66,9)" rx="2" ry="2" />
<text  x="749.09" y="335.5" ></text>
</g>
<g >
<title>os.OpenFile (17 samples, 1.81%)</title><rect x="460.2" y="245" width="21.3" height="15.0" fill="rgb(231,140,28)" rx="2" ry="2" />
<text  x="463.18" y="255.5" >o..</text>
</g>
<g >
<title>runtime.(*mheap).allocManual (1 samples, 0.11%)</title><rect x="827.6" y="213" width="1.3" height="15.0" fill="rgb(215,172,1)" rx="2" ry="2" />
<text  x="830.60" y="223.5" ></text>
</g>
<g >
<title>google.golang.org/grpc/internal/transport.(*itemList).dequeue (1 samples, 0.11%)</title><rect x="718.5" y="309" width="1.3" height="15.0" fill="rgb(248,49,22)" rx="2" ry="2" />
<text  x="721.50" y="319.5" ></text>
</g>
<g >
<title>github.com/pipikai/yun/cmd.start (3 samples, 0.32%)</title><rect x="1022.0" y="261" width="3.7" height="15.0" fill="rgb(239,209,18)" rx="2" ry="2" />
<text  x="1024.97" y="271.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (2 samples, 0.21%)</title><rect x="109.1" y="149" width="2.5" height="15.0" fill="rgb(230,61,12)" rx="2" ry="2" />
<text  x="112.06" y="159.5" ></text>
</g>
<g >
<title>runtime.pcvalue (1 samples, 0.11%)</title><rect x="886.5" y="149" width="1.3" height="15.0" fill="rgb(249,178,45)" rx="2" ry="2" />
<text  x="889.54" y="159.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination.func4 (1 samples, 0.11%)</title><rect x="744.8" y="277" width="1.3" height="15.0" fill="rgb(253,89,50)" rx="2" ry="2" />
<text  x="747.84" y="287.5" ></text>
</g>
<g >
<title>sync/atomic.(*Value).Store (1 samples, 0.11%)</title><rect x="655.8" y="165" width="1.3" height="15.0" fill="rgb(234,202,5)" rx="2" ry="2" />
<text  x="658.80" y="175.5" ></text>
</g>
<g >
<title>fmt.(*pp).printArg (3 samples, 0.32%)</title><rect x="15.0" y="245" width="3.8" height="15.0" fill="rgb(254,31,14)" rx="2" ry="2" />
<text  x="18.02" y="255.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.11%)</title><rect x="13.8" y="261" width="1.2" height="15.0" fill="rgb(247,54,1)" rx="2" ry="2" />
<text  x="16.76" y="271.5" ></text>
</g>
<g >
<title>net.(*netFD).Read (32 samples, 3.40%)</title><rect x="40.1" y="213" width="40.1" height="15.0" fill="rgb(227,58,5)" rx="2" ry="2" />
<text  x="43.10" y="223.5" >net..</text>
</g>
<g >
<title>runtime.(*gcWork).init (1 samples, 0.11%)</title><rect x="890.3" y="133" width="1.3" height="15.0" fill="rgb(205,44,46)" rx="2" ry="2" />
<text  x="893.30" y="143.5" ></text>
</g>
<g >
<title>runtime.newstack (3 samples, 0.32%)</title><rect x="40.1" y="181" width="3.8" height="15.0" fill="rgb(217,201,49)" rx="2" ry="2" />
<text  x="43.10" y="191.5" ></text>
</g>
<g >
<title>runtime/internal/syscall.Syscall6 (15 samples, 1.59%)</title><rect x="1090.9" y="245" width="18.8" height="15.0" fill="rgb(254,145,50)" rx="2" ry="2" />
<text  x="1093.94" y="255.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (1 samples, 0.11%)</title><rect x="1167.4" y="277" width="1.3" height="15.0" fill="rgb(231,105,27)" rx="2" ry="2" />
<text  x="1170.43" y="287.5" ></text>
</g>
<g >
<title>runtime.stackalloc (1 samples, 0.11%)</title><rect x="892.8" y="197" width="1.3" height="15.0" fill="rgb(236,162,16)" rx="2" ry="2" />
<text  x="895.81" y="207.5" ></text>
</g>
<g >
<title>google.golang.org/grpc/encoding/proto.codec.Unmarshal (55 samples, 5.84%)</title><rect x="482.8" y="261" width="68.9" height="15.0" fill="rgb(208,191,41)" rx="2" ry="2" />
<text  x="485.75" y="271.5" >google...</text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.11%)</title><rect x="586.8" y="85" width="1.3" height="15.0" fill="rgb(224,40,35)" rx="2" ry="2" />
<text  x="589.83" y="95.5" ></text>
</g>
<g >
<title>runtime.gosched_m (3 samples, 0.32%)</title><rect x="1033.3" y="325" width="3.7" height="15.0" fill="rgb(207,211,28)" rx="2" ry="2" />
<text  x="1036.25" y="335.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointersChunked (1 samples, 0.11%)</title><rect x="26.3" y="229" width="1.3" height="15.0" fill="rgb(209,5,53)" rx="2" ry="2" />
<text  x="29.30" y="239.5" ></text>
</g>
<g >
<title>runtime.newstack (3 samples, 0.32%)</title><rect x="1185.0" y="325" width="3.7" height="15.0" fill="rgb(209,33,1)" rx="2" ry="2" />
<text  x="1187.98" y="335.5" ></text>
</g>
<g >
<title>runtime.(*mspan).initHeapBits (1 samples, 0.11%)</title><rect x="484.0" y="85" width="1.3" height="15.0" fill="rgb(226,80,16)" rx="2" ry="2" />
<text  x="487.01" y="95.5" ></text>
</g>
<g >
<title>runtime.futexsleep (1 samples, 0.11%)</title><rect x="1185.0" y="197" width="1.2" height="15.0" fill="rgb(245,98,53)" rx="2" ry="2" />
<text  x="1187.98" y="207.5" ></text>
</g>
<g >
<title>golang.org/x/net/http2/hpack.(*Decoder).Write (2 samples, 0.21%)</title><rect x="35.1" y="261" width="2.5" height="15.0" fill="rgb(205,219,42)" rx="2" ry="2" />
<text  x="38.08" y="271.5" ></text>
</g>
<g >
<title>runtime.releaseSudog (1 samples, 0.11%)</title><rect x="716.0" y="277" width="1.2" height="15.0" fill="rgb(218,40,3)" rx="2" ry="2" />
<text  x="718.99" y="287.5" ></text>
</g>
<g >
<title>runtime.entersyscall (1 samples, 0.11%)</title><rect x="46.4" y="149" width="1.2" height="15.0" fill="rgb(214,67,11)" rx="2" ry="2" />
<text  x="49.37" y="159.5" ></text>
</g>
<g >
<title>runtime.newstack (1 samples, 0.11%)</title><rect x="726.0" y="293" width="1.3" height="15.0" fill="rgb(247,35,24)" rx="2" ry="2" />
<text  x="729.03" y="303.5" ></text>
</g>
<g >
<title>runtime.gentraceback (1 samples, 0.11%)</title><rect x="658.3" y="229" width="1.3" height="15.0" fill="rgb(253,68,31)" rx="2" ry="2" />
<text  x="661.31" y="239.5" ></text>
</g>
<g >
<title>runtime.netpollBreak (2 samples, 0.21%)</title><rect x="1109.7" y="277" width="2.6" height="15.0" fill="rgb(233,222,46)" rx="2" ry="2" />
<text  x="1112.74" y="287.5" ></text>
</g>
<g >
<title>syscall.Write (3 samples, 0.32%)</title><rect x="22.5" y="229" width="3.8" height="15.0" fill="rgb(237,165,26)" rx="2" ry="2" />
<text  x="25.54" y="239.5" ></text>
</g>
<g >
<title>runtime.resetspinning (3 samples, 0.32%)</title><rect x="1178.7" y="293" width="3.8" height="15.0" fill="rgb(215,104,10)" rx="2" ry="2" />
<text  x="1181.71" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (1 samples, 0.11%)</title><rect x="827.6" y="197" width="1.3" height="15.0" fill="rgb(225,95,18)" rx="2" ry="2" />
<text  x="830.60" y="207.5" ></text>
</g>
<g >
<title>runtime.scanblock (4 samples, 0.43%)</title><rect x="887.8" y="181" width="5.0" height="15.0" fill="rgb(252,155,24)" rx="2" ry="2" />
<text  x="890.79" y="191.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).update (1 samples, 0.11%)</title><rect x="727.3" y="213" width="1.2" height="15.0" fill="rgb(223,92,37)" rx="2" ry="2" />
<text  x="730.28" y="223.5" ></text>
</g>
<g >
<title>runtime.(*guintptr).cas (1 samples, 0.11%)</title><rect x="96.5" y="149" width="1.3" height="15.0" fill="rgb(212,61,41)" rx="2" ry="2" />
<text  x="99.52" y="159.5" ></text>
</g>
<g >
<title>runtime.pcvalue (1 samples, 0.11%)</title><rect x="714.7" y="165" width="1.3" height="15.0" fill="rgb(227,18,9)" rx="2" ry="2" />
<text  x="717.74" y="175.5" ></text>
</g>
<g >
<title>google.golang.org/grpc.(*Server).serveStreams.func1.2 (359 samples, 38.15%)</title><rect x="205.6" y="341" width="450.2" height="15.0" fill="rgb(206,116,15)" rx="2" ry="2" />
<text  x="208.62" y="351.5" >google.golang.org/grpc.(*Server).serveStreams.func1.2</text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.11%)</title><rect x="10.0" y="245" width="1.3" height="15.0" fill="rgb(243,14,14)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>google.golang.org/grpc/internal/transport.(*http2Server).keepalive (1 samples, 0.11%)</title><rect x="658.3" y="341" width="1.3" height="15.0" fill="rgb(226,68,25)" rx="2" ry="2" />
<text  x="661.31" y="351.5" ></text>
</g>
<g >
<title>google.golang.org/grpc/internal/transport.(*controlBuffer).put (5 samples, 0.53%)</title><rect x="95.3" y="293" width="6.2" height="15.0" fill="rgb(234,14,42)" rx="2" ry="2" />
<text  x="98.27" y="303.5" ></text>
</g>
<g >
<title>io.ReadAtLeast (40 samples, 4.25%)</title><rect x="153.0" y="277" width="50.1" height="15.0" fill="rgb(244,2,17)" rx="2" ry="2" />
<text  x="155.95" y="287.5" >io.Re..</text>
</g>
<g >
<title>runtime.gcFlushBgCredit (1 samples, 0.11%)</title><rect x="864.0" y="277" width="1.2" height="15.0" fill="rgb(222,133,29)" rx="2" ry="2" />
<text  x="866.96" y="287.5" ></text>
</g>
<g >
<title>golang.org/x/net/http2/hpack.(*headerFieldTable).addEntry (1 samples, 0.11%)</title><rect x="36.3" y="213" width="1.3" height="15.0" fill="rgb(231,188,7)" rx="2" ry="2" />
<text  x="39.33" y="223.5" ></text>
</g>
<g >
<title>runtime.growslice (5 samples, 0.53%)</title><rect x="105.3" y="229" width="6.3" height="15.0" fill="rgb(240,67,16)" rx="2" ry="2" />
<text  x="108.30" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpanLocked (1 samples, 0.11%)</title><rect x="1069.6" y="165" width="1.3" height="15.0" fill="rgb(207,93,27)" rx="2" ry="2" />
<text  x="1072.62" y="175.5" ></text>
</g>
<g >
<title>runtime.pcvalue (1 samples, 0.11%)</title><rect x="881.5" y="197" width="1.3" height="15.0" fill="rgb(236,66,20)" rx="2" ry="2" />
<text  x="884.52" y="207.5" ></text>
</g>
<g >
<title>google.golang.org/grpc/internal/channelz.newIdentifer (1 samples, 0.11%)</title><rect x="20.0" y="261" width="1.3" height="15.0" fill="rgb(216,203,42)" rx="2" ry="2" />
<text  x="23.03" y="271.5" ></text>
</g>
<g >
<title>sync/atomic.StorePointer (1 samples, 0.11%)</title><rect x="149.2" y="245" width="1.2" height="15.0" fill="rgb(237,218,32)" rx="2" ry="2" />
<text  x="152.19" y="255.5" ></text>
</g>
<g >
<title>context.(*cancelCtx).Done (1 samples, 0.11%)</title><rect x="149.2" y="277" width="1.2" height="15.0" fill="rgb(249,20,22)" rx="2" ry="2" />
<text  x="152.19" y="287.5" ></text>
</g>
<g >
<title>runtime.assertE2I (1 samples, 0.11%)</title><rect x="703.5" y="293" width="1.2" height="15.0" fill="rgb(223,165,0)" rx="2" ry="2" />
<text  x="706.45" y="303.5" ></text>
</g>
<g >
<title>runtime.copystack (1 samples, 0.11%)</title><rect x="892.8" y="213" width="1.3" height="15.0" fill="rgb(249,109,11)" rx="2" ry="2" />
<text  x="895.81" y="223.5" ></text>
</g>
<g >
<title>runtime.sellock (1 samples, 0.11%)</title><rect x="717.2" y="277" width="1.3" height="15.0" fill="rgb(218,117,36)" rx="2" ry="2" />
<text  x="720.25" y="287.5" ></text>
</g>
<g >
<title>os.newFile (4 samples, 0.43%)</title><rect x="461.4" y="213" width="5.1" height="15.0" fill="rgb(246,215,52)" rx="2" ry="2" />
<text  x="464.43" y="223.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).close (1 samples, 0.11%)</title><rect x="101.5" y="213" width="1.3" height="15.0" fill="rgb(216,45,45)" rx="2" ry="2" />
<text  x="104.54" y="223.5" ></text>
</g>
<g >
<title>google.golang.org/grpc/internal/transport.(*loopyWriter).writeHeader (1 samples, 0.11%)</title><rect x="722.3" y="277" width="1.2" height="15.0" fill="rgb(231,124,50)" rx="2" ry="2" />
<text  x="725.26" y="287.5" ></text>
</g>
<g >
<title>runtime.heapBitsForAddr (1 samples, 0.11%)</title><rect x="991.9" y="261" width="1.2" height="15.0" fill="rgb(229,42,45)" rx="2" ry="2" />
<text  x="994.87" y="271.5" ></text>
</g>
<g >
<title>runtime.SetFinalizer.func2 (2 samples, 0.21%)</title><rect x="461.4" y="165" width="2.5" height="15.0" fill="rgb(241,9,47)" rx="2" ry="2" />
<text  x="464.43" y="175.5" ></text>
</g>
<g >
<title>runtime.mcall (127 samples, 13.50%)</title><rect x="1025.7" y="341" width="159.3" height="15.0" fill="rgb(207,131,52)" rx="2" ry="2" />
<text  x="1028.73" y="351.5" >runtime.mcall</text>
</g>
<g >
<title>runtime.runqsteal (9 samples, 0.96%)</title><rect x="1151.1" y="261" width="11.3" height="15.0" fill="rgb(213,124,3)" rx="2" ry="2" />
<text  x="1154.13" y="271.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.11%)</title><rect x="12.5" y="261" width="1.3" height="15.0" fill="rgb(208,187,37)" rx="2" ry="2" />
<text  x="15.51" y="271.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.11%)</title><rect x="463.9" y="181" width="1.3" height="15.0" fill="rgb(247,42,0)" rx="2" ry="2" />
<text  x="466.94" y="191.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (1 samples, 0.11%)</title><rect x="1181.2" y="229" width="1.3" height="15.0" fill="rgb(248,93,26)" rx="2" ry="2" />
<text  x="1184.22" y="239.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Bool).Load (1 samples, 0.11%)</title><rect x="1168.7" y="277" width="1.2" height="15.0" fill="rgb(235,112,49)" rx="2" ry="2" />
<text  x="1171.68" y="287.5" ></text>
</g>
<g >
<title>net.IP.String (2 samples, 0.21%)</title><rect x="16.3" y="197" width="2.5" height="15.0" fill="rgb(228,181,25)" rx="2" ry="2" />
<text  x="19.27" y="207.5" ></text>
</g>
<g >
<title>google.golang.org/grpc/internal/transport.(*http2Server).operateHeaders (3 samples, 0.32%)</title><rect x="149.2" y="293" width="3.8" height="15.0" fill="rgb(206,163,49)" rx="2" ry="2" />
<text  x="152.19" y="303.5" ></text>
</g>
<g >
<title>runtime.pcvalue (2 samples, 0.21%)</title><rect x="711.0" y="165" width="2.5" height="15.0" fill="rgb(247,19,41)" rx="2" ry="2" />
<text  x="713.98" y="175.5" ></text>
</g>
<g >
<title>runtime.heapBits.next (2 samples, 0.21%)</title><rect x="989.4" y="261" width="2.5" height="15.0" fill="rgb(222,129,3)" rx="2" ry="2" />
<text  x="992.36" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (1 samples, 0.11%)</title><rect x="744.8" y="197" width="1.3" height="15.0" fill="rgb(243,177,11)" rx="2" ry="2" />
<text  x="747.84" y="207.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.11%)</title><rect x="1167.4" y="229" width="1.3" height="15.0" fill="rgb(206,112,30)" rx="2" ry="2" />
<text  x="1170.43" y="239.5" ></text>
</g>
<g >
<title>google.golang.org/grpc/internal/transport.(*Stream).RecvCompress (1 samples, 0.11%)</title><rect x="654.5" y="309" width="1.3" height="15.0" fill="rgb(228,189,14)" rx="2" ry="2" />
<text  x="657.55" y="319.5" ></text>
</g>
<g >
<title>syscall.Syscall (202 samples, 21.47%)</title><rect x="206.9" y="197" width="253.3" height="15.0" fill="rgb(213,122,54)" rx="2" ry="2" />
<text  x="209.88" y="207.5" >syscall.Syscall</text>
</g>
<g >
<title>runtime.pcdatavalue (1 samples, 0.11%)</title><rect x="886.5" y="165" width="1.3" height="15.0" fill="rgb(207,154,49)" rx="2" ry="2" />
<text  x="889.54" y="175.5" ></text>
</g>
<g >
<title>runtime.(*timeHistogram).record (1 samples, 0.11%)</title><rect x="1025.7" y="261" width="1.3" height="15.0" fill="rgb(218,107,30)" rx="2" ry="2" />
<text  x="1028.73" y="271.5" ></text>
</g>
<g >
<title>google.golang.org/grpc.recvAndDecompress (79 samples, 8.40%)</title><rect x="555.5" y="293" width="99.0" height="15.0" fill="rgb(213,161,9)" rx="2" ry="2" />
<text  x="558.48" y="303.5" >google.gola..</text>
</g>
<g >
<title>runtime.startm (1 samples, 0.11%)</title><rect x="145.4" y="101" width="1.3" height="15.0" fill="rgb(226,102,15)" rx="2" ry="2" />
<text  x="148.43" y="111.5" ></text>
</g>
<g >
<title>google.golang.org/grpc/internal/transport.(*bdpEstimator).calculate (5 samples, 0.53%)</title><rect x="141.7" y="277" width="6.2" height="15.0" fill="rgb(218,122,5)" rx="2" ry="2" />
<text  x="144.67" y="287.5" ></text>
</g>
<g >
<title>runtime.deductAssistCredit (3 samples, 0.32%)</title><rect x="613.2" y="229" width="3.7" height="15.0" fill="rgb(248,3,10)" rx="2" ry="2" />
<text  x="616.17" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mcache).releaseAll (1 samples, 0.11%)</title><rect x="1069.6" y="245" width="1.3" height="15.0" fill="rgb(222,87,41)" rx="2" ry="2" />
<text  x="1072.62" y="255.5" ></text>
</g>
<g >
<title>golang.org/x/net/http2.(*Framer).readMetaFrame (2 samples, 0.21%)</title><rect x="35.1" y="277" width="2.5" height="15.0" fill="rgb(241,72,14)" rx="2" ry="2" />
<text  x="38.08" y="287.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.11%)</title><rect x="1077.1" y="277" width="1.3" height="15.0" fill="rgb(220,173,53)" rx="2" ry="2" />
<text  x="1080.14" y="287.5" ></text>
</g>
<g >
<title>os.(*File).Close (1 samples, 0.11%)</title><rect x="481.5" y="261" width="1.3" height="15.0" fill="rgb(226,22,25)" rx="2" ry="2" />
<text  x="484.50" y="271.5" ></text>
</g>
<g >
<title>runtime.findObject (1 samples, 0.11%)</title><rect x="906.6" y="229" width="1.3" height="15.0" fill="rgb(250,211,44)" rx="2" ry="2" />
<text  x="909.60" y="239.5" ></text>
</g>
<g >
<title>google.golang.org/grpc/internal/transport.newFramer (1 samples, 0.11%)</title><rect x="27.6" y="277" width="1.2" height="15.0" fill="rgb(224,198,9)" rx="2" ry="2" />
<text  x="30.56" y="287.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.11%)</title><rect x="36.3" y="165" width="1.3" height="15.0" fill="rgb(205,180,18)" rx="2" ry="2" />
<text  x="39.33" y="175.5" ></text>
</g>
<g >
<title>runtime.(*fixalloc).alloc (1 samples, 0.11%)</title><rect x="461.4" y="133" width="1.3" height="15.0" fill="rgb(254,135,2)" rx="2" ry="2" />
<text  x="464.43" y="143.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (2 samples, 0.21%)</title><rect x="109.1" y="117" width="2.5" height="15.0" fill="rgb(209,19,39)" rx="2" ry="2" />
<text  x="112.06" y="127.5" ></text>
</g>
<g >
<title>runtime.writeHeapBits.flush (1 samples, 0.11%)</title><rect x="484.0" y="69" width="1.3" height="15.0" fill="rgb(223,149,48)" rx="2" ry="2" />
<text  x="487.01" y="79.5" ></text>
</g>
<g >
<title>runtime.systemstack (3 samples, 0.32%)</title><rect x="105.3" y="117" width="3.8" height="15.0" fill="rgb(230,212,26)" rx="2" ry="2" />
<text  x="108.30" y="127.5" ></text>
</g>
<g >
<title>runtime.ready (1 samples, 0.11%)</title><rect x="104.0" y="213" width="1.3" height="15.0" fill="rgb(246,173,0)" rx="2" ry="2" />
<text  x="107.05" y="223.5" ></text>
</g>
<g >
<title>runtime.gcDrain (218 samples, 23.17%)</title><rect x="747.3" y="293" width="273.4" height="15.0" fill="rgb(221,40,41)" rx="2" ry="2" />
<text  x="750.34" y="303.5" >runtime.gcDrain</text>
</g>
<g >
<title>runtime.pMask.set (1 samples, 0.11%)</title><rect x="1123.5" y="277" width="1.3" height="15.0" fill="rgb(212,143,31)" rx="2" ry="2" />
<text  x="1126.54" y="287.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.21%)</title><rect x="109.1" y="165" width="2.5" height="15.0" fill="rgb(241,90,20)" rx="2" ry="2" />
<text  x="112.06" y="175.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.11%)</title><rect x="104.0" y="245" width="1.3" height="15.0" fill="rgb(205,174,40)" rx="2" ry="2" />
<text  x="107.05" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan.func1 (1 samples, 0.11%)</title><rect x="1069.6" y="181" width="1.3" height="15.0" fill="rgb(245,67,46)" rx="2" ry="2" />
<text  x="1072.62" y="191.5" ></text>
</g>
<g >
<title>syscall.read (27 samples, 2.87%)</title><rect x="46.4" y="181" width="33.8" height="15.0" fill="rgb(228,123,47)" rx="2" ry="2" />
<text  x="49.37" y="191.5" >sy..</text>
</g>
<g >
<title>runtime.reentersyscall (1 samples, 0.11%)</title><rect x="46.4" y="133" width="1.2" height="15.0" fill="rgb(210,168,4)" rx="2" ry="2" />
<text  x="49.37" y="143.5" ></text>
</g>
<g >
<title>runtime.resetspinning (1 samples, 0.11%)</title><rect x="1187.5" y="261" width="1.2" height="15.0" fill="rgb(232,49,20)" rx="2" ry="2" />
<text  x="1190.49" y="271.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.11%)</title><rect x="10.0" y="293" width="1.3" height="15.0" fill="rgb(248,175,29)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>runtime.handoff (1 samples, 0.11%)</title><rect x="109.1" y="85" width="1.2" height="15.0" fill="rgb(246,122,35)" rx="2" ry="2" />
<text  x="112.06" y="95.5" ></text>
</g>
<g >
<title>syscall.Open (12 samples, 1.28%)</title><rect x="466.5" y="229" width="15.0" height="15.0" fill="rgb(226,223,29)" rx="2" ry="2" />
<text  x="469.45" y="239.5" ></text>
</g>
<g >
<title>github.com/pipikai/yun/core/storage/drivers/local.(*Local).Upload (220 samples, 23.38%)</title><rect x="205.6" y="261" width="275.9" height="15.0" fill="rgb(243,121,22)" rx="2" ry="2" />
<text  x="208.62" y="271.5" >github.com/pipikai/yun/core/storage/..</text>
</g>
<g >
<title>runtime/internal/atomic.(*Bool).Load (1 samples, 0.11%)</title><rect x="107.8" y="85" width="1.3" height="15.0" fill="rgb(232,87,37)" rx="2" ry="2" />
<text  x="110.81" y="95.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).enlistWorker (7 samples, 0.74%)</title><rect x="797.5" y="261" width="8.8" height="15.0" fill="rgb(222,51,53)" rx="2" ry="2" />
<text  x="800.50" y="271.5" ></text>
</g>
<g >
<title>io.ReadAtLeast (46 samples, 4.89%)</title><rect x="555.5" y="245" width="57.7" height="15.0" fill="rgb(241,10,15)" rx="2" ry="2" />
<text  x="558.48" y="255.5" >io.Rea..</text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint32).Add (1 samples, 0.11%)</title><rect x="827.6" y="181" width="1.3" height="15.0" fill="rgb(229,29,8)" rx="2" ry="2" />
<text  x="830.60" y="191.5" ></text>
</g>
<g >
<title>runtime.schedule (3 samples, 0.32%)</title><rect x="1185.0" y="277" width="3.7" height="15.0" fill="rgb(254,40,13)" rx="2" ry="2" />
<text  x="1187.98" y="287.5" ></text>
</g>
<g >
<title>runtime.sysUnused (4 samples, 0.43%)</title><rect x="728.5" y="229" width="5.0" height="15.0" fill="rgb(206,201,22)" rx="2" ry="2" />
<text  x="731.53" y="239.5" ></text>
</g>
<g >
<title>runtime.notesleep (1 samples, 0.11%)</title><rect x="1033.3" y="245" width="1.2" height="15.0" fill="rgb(223,8,52)" rx="2" ry="2" />
<text  x="1036.25" y="255.5" ></text>
</g>
<g >
<title>syscall.Syscall (30 samples, 3.19%)</title><rect x="154.2" y="181" width="37.6" height="15.0" fill="rgb(241,52,17)" rx="2" ry="2" />
<text  x="157.21" y="191.5" >sys..</text>
</g>
<g >
<title>runtime.(*sweepLocker).tryAcquire (2 samples, 0.21%)</title><rect x="738.6" y="309" width="2.5" height="15.0" fill="rgb(242,153,45)" rx="2" ry="2" />
<text  x="741.57" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.11%)</title><rect x="722.3" y="181" width="1.2" height="15.0" fill="rgb(232,122,17)" rx="2" ry="2" />
<text  x="725.26" y="191.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.11%)</title><rect x="10.0" y="277" width="1.3" height="15.0" fill="rgb(249,62,14)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>runtime.goschedImpl (3 samples, 0.32%)</title><rect x="1033.3" y="309" width="3.7" height="15.0" fill="rgb(238,52,12)" rx="2" ry="2" />
<text  x="1036.25" y="319.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).reset (1 samples, 0.11%)</title><rect x="485.3" y="37" width="1.2" height="15.0" fill="rgb(220,171,39)" rx="2" ry="2" />
<text  x="488.26" y="47.5" ></text>
</g>
<g >
<title>runtime.osyield (1 samples, 0.11%)</title><rect x="1077.1" y="245" width="1.3" height="15.0" fill="rgb(233,80,2)" rx="2" ry="2" />
<text  x="1080.14" y="255.5" ></text>
</g>
<g >
<title>golang.org/x/net/http2/hpack.(*headerFieldTable).addEntry (1 samples, 0.11%)</title><rect x="722.3" y="245" width="1.2" height="15.0" fill="rgb(215,62,3)" rx="2" ry="2" />
<text  x="725.26" y="255.5" ></text>
</g>
<g >
<title>runtime.closechan (1 samples, 0.11%)</title><rect x="104.0" y="277" width="1.3" height="15.0" fill="rgb(229,143,0)" rx="2" ry="2" />
<text  x="107.05" y="287.5" ></text>
</g>
<g >
<title>runtime.unlock2 (2 samples, 0.21%)</title><rect x="610.7" y="149" width="2.5" height="15.0" fill="rgb(238,188,25)" rx="2" ry="2" />
<text  x="613.66" y="159.5" ></text>
</g>
<g >
<title>google.golang.org/grpc/internal/transport.(*http2Server).updateFlowControl (1 samples, 0.11%)</title><rect x="146.7" y="261" width="1.2" height="15.0" fill="rgb(213,34,47)" rx="2" ry="2" />
<text  x="149.68" y="271.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (6 samples, 0.64%)</title><rect x="1171.2" y="293" width="7.5" height="15.0" fill="rgb(217,146,19)" rx="2" ry="2" />
<text  x="1174.19" y="303.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).Reset (1 samples, 0.11%)</title><rect x="31.3" y="293" width="1.3" height="15.0" fill="rgb(215,68,37)" rx="2" ry="2" />
<text  x="34.32" y="303.5" ></text>
</g>
<g >
<title>runtime.handoff (34 samples, 3.61%)</title><rect x="806.3" y="261" width="42.6" height="15.0" fill="rgb(220,54,15)" rx="2" ry="2" />
<text  x="809.28" y="271.5" >runt..</text>
</g>
<g >
<title>runtime.funcspdelta (2 samples, 0.21%)</title><rect x="595.6" y="69" width="2.5" height="15.0" fill="rgb(228,93,29)" rx="2" ry="2" />
<text  x="598.61" y="79.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.11%)</title><rect x="36.3" y="197" width="1.3" height="15.0" fill="rgb(232,74,10)" rx="2" ry="2" />
<text  x="39.33" y="207.5" ></text>
</g>
<g >
<title>runtime.unlock2 (1 samples, 0.11%)</title><rect x="1167.4" y="261" width="1.3" height="15.0" fill="rgb(232,139,51)" rx="2" ry="2" />
<text  x="1170.43" y="271.5" ></text>
</g>
<g >
<title>runtime.gcMarkWorkAvailable (1 samples, 0.11%)</title><rect x="1075.9" y="277" width="1.2" height="15.0" fill="rgb(223,90,7)" rx="2" ry="2" />
<text  x="1078.89" y="287.5" ></text>
</g>
<g >
<title>runtime.findObject (1 samples, 0.11%)</title><rect x="1019.5" y="229" width="1.2" height="15.0" fill="rgb(250,4,25)" rx="2" ry="2" />
<text  x="1022.46" y="239.5" ></text>
</g>
<g >
<title>runtime.blockevent (7 samples, 0.74%)</title><rect x="707.2" y="277" width="8.8" height="15.0" fill="rgb(224,209,49)" rx="2" ry="2" />
<text  x="710.22" y="287.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone (2 samples, 0.21%)</title><rect x="743.6" y="325" width="2.5" height="15.0" fill="rgb(234,5,35)" rx="2" ry="2" />
<text  x="746.58" y="335.5" ></text>
</g>
<g >
<title>runtime.scanobject (2 samples, 0.21%)</title><rect x="614.4" y="133" width="2.5" height="15.0" fill="rgb(213,74,48)" rx="2" ry="2" />
<text  x="617.42" y="143.5" ></text>
</g>
<g >
<title>runtime.checkTimers (5 samples, 0.53%)</title><rect x="1144.9" y="261" width="6.2" height="15.0" fill="rgb(235,70,53)" rx="2" ry="2" />
<text  x="1147.86" y="271.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.11%)</title><rect x="140.4" y="261" width="1.3" height="15.0" fill="rgb(228,173,25)" rx="2" ry="2" />
<text  x="143.41" y="271.5" ></text>
</g>
<g >
<title>google.golang.org/grpc/internal/transport.(*Stream).write (3 samples, 0.32%)</title><rect x="82.7" y="293" width="3.8" height="15.0" fill="rgb(223,127,29)" rx="2" ry="2" />
<text  x="85.73" y="303.5" ></text>
</g>
<g >
<title>syscall.read (31 samples, 3.29%)</title><rect x="153.0" y="197" width="38.8" height="15.0" fill="rgb(205,148,33)" rx="2" ry="2" />
<text  x="155.95" y="207.5" >sys..</text>
</g>
<g >
<title>google.golang.org/protobuf/internal/impl.(*MessageInfo).unmarshal (55 samples, 5.84%)</title><rect x="482.8" y="181" width="68.9" height="15.0" fill="rgb(224,40,27)" rx="2" ry="2" />
<text  x="485.75" y="191.5" >google...</text>
</g>
<g >
<title>runtime.gcMarkTermination.func3 (1 samples, 0.11%)</title><rect x="743.6" y="277" width="1.2" height="15.0" fill="rgb(209,29,10)" rx="2" ry="2" />
<text  x="746.58" y="287.5" ></text>
</g>
<g >
<title>syscall.Syscall (1 samples, 0.11%)</title><rect x="465.2" y="165" width="1.3" height="15.0" fill="rgb(250,207,46)" rx="2" ry="2" />
<text  x="468.20" y="175.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).alloc (1 samples, 0.11%)</title><rect x="105.3" y="69" width="1.3" height="15.0" fill="rgb(251,161,38)" rx="2" ry="2" />
<text  x="108.30" y="79.5" ></text>
</g>
<g >
<title>all (941 samples, 100%)</title><rect x="10.0" y="357" width="1180.0" height="15.0" fill="rgb(224,54,35)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>runtime.funcspdelta (2 samples, 0.21%)</title><rect x="711.0" y="181" width="2.5" height="15.0" fill="rgb(243,57,25)" rx="2" ry="2" />
<text  x="713.98" y="191.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Unlock (1 samples, 0.11%)</title><rect x="85.2" y="277" width="1.3" height="15.0" fill="rgb(243,14,23)" rx="2" ry="2" />
<text  x="88.24" y="287.5" ></text>
</g>
<g >
<title>runtime.systemstack (7 samples, 0.74%)</title><rect x="707.2" y="229" width="8.8" height="15.0" fill="rgb(212,17,46)" rx="2" ry="2" />
<text  x="710.22" y="239.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.11%)</title><rect x="99.0" y="85" width="1.3" height="15.0" fill="rgb(236,132,11)" rx="2" ry="2" />
<text  x="102.03" y="95.5" ></text>
</g>
<g >
<title>runtime.futexsleep (1 samples, 0.11%)</title><rect x="1033.3" y="229" width="1.2" height="15.0" fill="rgb(206,57,29)" rx="2" ry="2" />
<text  x="1036.25" y="239.5" ></text>
</g>
<g >
<title>sync.(*poolChain).pushHead (2 samples, 0.21%)</title><rect x="586.8" y="133" width="2.5" height="15.0" fill="rgb(205,228,45)" rx="2" ry="2" />
<text  x="589.83" y="143.5" ></text>
</g>
<g >
<title>runtime.lfstackUnpack (1 samples, 0.11%)</title><rect x="109.1" y="69" width="1.2" height="15.0" fill="rgb(215,177,49)" rx="2" ry="2" />
<text  x="112.06" y="79.5" ></text>
</g>
<g >
<title>runtime/internal/syscall.Syscall6 (30 samples, 3.19%)</title><rect x="664.6" y="197" width="37.6" height="15.0" fill="rgb(241,161,1)" rx="2" ry="2" />
<text  x="667.58" y="207.5" >run..</text>
</g>
<g >
<title>runtime.startm (2 samples, 0.21%)</title><rect x="1180.0" y="261" width="2.5" height="15.0" fill="rgb(241,160,4)" rx="2" ry="2" />
<text  x="1182.97" y="271.5" ></text>
</g>
<g >
<title>github.com/pipikai/yun/core/storage/svc.(*Server).RpcServer (3 samples, 0.32%)</title><rect x="1022.0" y="213" width="3.7" height="15.0" fill="rgb(216,103,7)" rx="2" ry="2" />
<text  x="1024.97" y="223.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.11%)</title><rect x="140.4" y="277" width="1.3" height="15.0" fill="rgb(221,100,39)" rx="2" ry="2" />
<text  x="143.41" y="287.5" ></text>
</g>
<g >
<title>runtime.netpoll (2 samples, 0.21%)</title><rect x="1029.5" y="277" width="2.5" height="15.0" fill="rgb(249,53,19)" rx="2" ry="2" />
<text  x="1032.49" y="287.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (2 samples, 0.21%)</title><rect x="610.7" y="165" width="2.5" height="15.0" fill="rgb(213,94,0)" rx="2" ry="2" />
<text  x="613.66" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (3 samples, 0.32%)</title><rect x="105.3" y="149" width="3.8" height="15.0" fill="rgb(219,82,11)" rx="2" ry="2" />
<text  x="108.30" y="159.5" ></text>
</g>
<g >
<title>runtime.notesleep (1 samples, 0.11%)</title><rect x="1185.0" y="213" width="1.2" height="15.0" fill="rgb(223,117,17)" rx="2" ry="2" />
<text  x="1187.98" y="223.5" ></text>
</g>
<g >
<title>runtime.removefinalizer (1 samples, 0.11%)</title><rect x="102.8" y="197" width="1.2" height="15.0" fill="rgb(220,12,26)" rx="2" ry="2" />
<text  x="105.79" y="207.5" ></text>
</g>
<g >
<title>runtime.(*stkframe).getStackMap (1 samples, 0.11%)</title><rect x="16.3" y="69" width="1.2" height="15.0" fill="rgb(217,168,19)" rx="2" ry="2" />
<text  x="19.27" y="79.5" ></text>
</g>
<g >
<title>runtime.blockevent (1 samples, 0.11%)</title><rect x="658.3" y="309" width="1.3" height="15.0" fill="rgb(216,83,25)" rx="2" ry="2" />
<text  x="661.31" y="319.5" ></text>
</g>
<g >
<title>runtime.schedule (6 samples, 0.64%)</title><rect x="1025.7" y="309" width="7.6" height="15.0" fill="rgb(235,99,41)" rx="2" ry="2" />
<text  x="1028.73" y="319.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.11%)</title><rect x="1181.2" y="213" width="1.3" height="15.0" fill="rgb(219,215,8)" rx="2" ry="2" />
<text  x="1184.22" y="223.5" ></text>
</g>
<g >
<title>runtime.signalM (4 samples, 0.43%)</title><rect x="876.5" y="229" width="5.0" height="15.0" fill="rgb(230,18,51)" rx="2" ry="2" />
<text  x="879.50" y="239.5" ></text>
</g>
<g >
<title>runtime.stkbucket (1 samples, 0.11%)</title><rect x="487.8" y="69" width="1.2" height="15.0" fill="rgb(247,228,19)" rx="2" ry="2" />
<text  x="490.77" y="79.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (2 samples, 0.21%)</title><rect x="97.8" y="101" width="2.5" height="15.0" fill="rgb(229,89,47)" rx="2" ry="2" />
<text  x="100.78" y="111.5" ></text>
</g>
<g >
<title>google.golang.org/grpc/internal/transport.NewServerTransport (15 samples, 1.59%)</title><rect x="11.3" y="293" width="18.8" height="15.0" fill="rgb(225,194,29)" rx="2" ry="2" />
<text  x="14.25" y="303.5" ></text>
</g>
<g >
<title>runtime/internal/syscall.EpollWait (2 samples, 0.21%)</title><rect x="1029.5" y="261" width="2.5" height="15.0" fill="rgb(233,62,33)" rx="2" ry="2" />
<text  x="1032.49" y="271.5" ></text>
</g>
<g >
<title>context.(*cancelCtx).Done (1 samples, 0.11%)</title><rect x="655.8" y="181" width="1.3" height="15.0" fill="rgb(211,172,51)" rx="2" ry="2" />
<text  x="658.80" y="191.5" ></text>
</g>
<g >
<title>runtime.send (2 samples, 0.21%)</title><rect x="144.2" y="197" width="2.5" height="15.0" fill="rgb(235,83,2)" rx="2" ry="2" />
<text  x="147.18" y="207.5" ></text>
</g>
<g >
<title>runtime.goready (3 samples, 0.32%)</title><rect x="96.5" y="213" width="3.8" height="15.0" fill="rgb(214,79,20)" rx="2" ry="2" />
<text  x="99.52" y="223.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_fast32 (1 samples, 0.11%)</title><rect x="721.0" y="229" width="1.3" height="15.0" fill="rgb(221,149,5)" rx="2" ry="2" />
<text  x="724.01" y="239.5" ></text>
</g>
<g >
<title>syscall.write (31 samples, 3.29%)</title><rect x="663.3" y="245" width="38.9" height="15.0" fill="rgb(222,45,4)" rx="2" ry="2" />
<text  x="666.33" y="255.5" >sys..</text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (3 samples, 0.32%)</title><rect x="105.3" y="101" width="3.8" height="15.0" fill="rgb(240,178,41)" rx="2" ry="2" />
<text  x="108.30" y="111.5" ></text>
</g>
<g >
<title>github.com/pipikai/yun/core/storage/svc.(*Server).Upload (221 samples, 23.49%)</title><rect x="205.6" y="277" width="277.2" height="15.0" fill="rgb(234,177,36)" rx="2" ry="2" />
<text  x="208.62" y="287.5" >github.com/pipikai/yun/core/storage/s..</text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (2 samples, 0.21%)</title><rect x="109.1" y="133" width="2.5" height="15.0" fill="rgb(228,2,1)" rx="2" ry="2" />
<text  x="112.06" y="143.5" ></text>
</g>
<g >
<title>runtime.(*scavengerState).init.func2 (5 samples, 0.53%)</title><rect x="727.3" y="309" width="6.2" height="15.0" fill="rgb(215,106,8)" rx="2" ry="2" />
<text  x="730.28" y="319.5" ></text>
</g>
<g >
<title>google.golang.org/grpc.(*Server).serveStreams (140 samples, 14.88%)</title><rect x="30.1" y="325" width="175.5" height="15.0" fill="rgb(241,109,9)" rx="2" ry="2" />
<text  x="33.06" y="335.5" >google.golang.org/grpc..</text>
</g>
<g >
<title>runtime.greyobject (26 samples, 2.76%)</title><rect x="956.8" y="261" width="32.6" height="15.0" fill="rgb(213,168,50)" rx="2" ry="2" />
<text  x="959.76" y="271.5" >ru..</text>
</g>
<g >
<title>sync/atomic.(*Value).Store (1 samples, 0.11%)</title><rect x="149.2" y="261" width="1.2" height="15.0" fill="rgb(244,39,31)" rx="2" ry="2" />
<text  x="152.19" y="271.5" ></text>
</g>
<g >
<title>net.(*sysDialer).dialSerial (2 samples, 0.21%)</title><rect x="655.8" y="197" width="2.5" height="15.0" fill="rgb(254,127,40)" rx="2" ry="2" />
<text  x="658.80" y="207.5" ></text>
</g>
<g >
<title>runtime.(*stkframe).getStackMap (3 samples, 0.32%)</title><rect x="884.0" y="181" width="3.8" height="15.0" fill="rgb(244,86,44)" rx="2" ry="2" />
<text  x="887.03" y="191.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint32).CompareAndSwap (1 samples, 0.11%)</title><rect x="741.1" y="309" width="1.2" height="15.0" fill="rgb(249,129,21)" rx="2" ry="2" />
<text  x="744.07" y="319.5" ></text>
</g>
<g >
<title>sync.(*poolDequeue).pushHead (1 samples, 0.11%)</title><rect x="588.1" y="117" width="1.2" height="15.0" fill="rgb(211,37,17)" rx="2" ry="2" />
<text  x="591.09" y="127.5" ></text>
</g>
<g >
<title>runtime.runqgrab (9 samples, 0.96%)</title><rect x="1151.1" y="245" width="11.3" height="15.0" fill="rgb(240,207,13)" rx="2" ry="2" />
<text  x="1154.13" y="255.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.UnmarshalMerge (55 samples, 5.84%)</title><rect x="482.8" y="229" width="68.9" height="15.0" fill="rgb(211,181,0)" rx="2" ry="2" />
<text  x="485.75" y="239.5" >github...</text>
</g>
<g >
<title>google.golang.org/grpc/internal/transport.(*transportReader).Read (46 samples, 4.89%)</title><rect x="555.5" y="229" width="57.7" height="15.0" fill="rgb(230,228,27)" rx="2" ry="2" />
<text  x="558.48" y="239.5" >google..</text>
</g>
<g >
<title>google.golang.org/grpc/internal/transport.(*bufWriter).Flush (3 samples, 0.32%)</title><rect x="22.5" y="277" width="3.8" height="15.0" fill="rgb(216,105,17)" rx="2" ry="2" />
<text  x="25.54" y="287.5" ></text>
</g>
<g >
<title>runtime.gentraceback (7 samples, 0.74%)</title><rect x="707.2" y="197" width="8.8" height="15.0" fill="rgb(240,227,54)" rx="2" ry="2" />
<text  x="710.22" y="207.5" ></text>
</g>
<g >
<title>google.golang.org/grpc/internal/transport.NewServerTransport.func2 (54 samples, 5.74%)</title><rect x="659.6" y="341" width="67.7" height="15.0" fill="rgb(243,197,22)" rx="2" ry="2" />
<text  x="662.56" y="351.5" >google...</text>
</g>
<g >
<title>runtime.goschedImpl (3 samples, 0.32%)</title><rect x="1185.0" y="293" width="3.7" height="15.0" fill="rgb(218,24,4)" rx="2" ry="2" />
<text  x="1187.98" y="303.5" ></text>
</g>
<g >
<title>runtime.futexsleep (2 samples, 0.21%)</title><rect x="1173.7" y="261" width="2.5" height="15.0" fill="rgb(233,153,29)" rx="2" ry="2" />
<text  x="1176.70" y="271.5" ></text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.11%)</title><rect x="1077.1" y="261" width="1.3" height="15.0" fill="rgb(233,98,39)" rx="2" ry="2" />
<text  x="1080.14" y="271.5" ></text>
</g>
<g >
<title>runtime.main (3 samples, 0.32%)</title><rect x="1022.0" y="341" width="3.7" height="15.0" fill="rgb(217,108,9)" rx="2" ry="2" />
<text  x="1024.97" y="351.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).decref (1 samples, 0.11%)</title><rect x="101.5" y="229" width="1.3" height="15.0" fill="rgb(215,163,36)" rx="2" ry="2" />
<text  x="104.54" y="239.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.11%)</title><rect x="37.6" y="229" width="1.2" height="15.0" fill="rgb(220,107,42)" rx="2" ry="2" />
<text  x="40.59" y="239.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.11%)</title><rect x="1185.0" y="181" width="1.2" height="15.0" fill="rgb(225,160,15)" rx="2" ry="2" />
<text  x="1187.98" y="191.5" ></text>
</g>
<g >
<title>fmt.(*pp).doPrintf (1 samples, 0.11%)</title><rect x="20.0" y="229" width="1.3" height="15.0" fill="rgb(223,193,15)" rx="2" ry="2" />
<text  x="23.03" y="239.5" ></text>
</g>
<g >
<title>runtime.mapaccess1 (1 samples, 0.11%)</title><rect x="81.5" y="277" width="1.2" height="15.0" fill="rgb(251,4,50)" rx="2" ry="2" />
<text  x="84.48" y="287.5" ></text>
</g>
<g >
<title>runtime.systemstack (5 samples, 0.53%)</title><rect x="727.3" y="277" width="6.2" height="15.0" fill="rgb(252,184,17)" rx="2" ry="2" />
<text  x="730.28" y="287.5" ></text>
</g>
<g >
<title>time.Now (2 samples, 0.21%)</title><rect x="203.1" y="293" width="2.5" height="15.0" fill="rgb(251,89,44)" rx="2" ry="2" />
<text  x="206.11" y="303.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.Marshal (1 samples, 0.11%)</title><rect x="553.0" y="261" width="1.2" height="15.0" fill="rgb(213,216,33)" rx="2" ry="2" />
<text  x="555.98" y="271.5" ></text>
</g>
<g >
<title>runtime.step (1 samples, 0.11%)</title><rect x="42.6" y="101" width="1.3" height="15.0" fill="rgb(247,219,3)" rx="2" ry="2" />
<text  x="45.60" y="111.5" ></text>
</g>
<g >
<title>google.golang.org/grpc/internal/transport.(*loopyWriter).run (54 samples, 5.74%)</title><rect x="659.6" y="325" width="67.7" height="15.0" fill="rgb(236,201,43)" rx="2" ry="2" />
<text  x="662.56" y="335.5" >google...</text>
</g>
<g >
<title>io.ReadFull (40 samples, 4.25%)</title><rect x="153.0" y="293" width="50.1" height="15.0" fill="rgb(224,103,23)" rx="2" ry="2" />
<text  x="155.95" y="303.5" >io.Re..</text>
</g>
<g >
<title>golang.org/x/net/http2.NewFramer (1 samples, 0.11%)</title><rect x="27.6" y="261" width="1.2" height="15.0" fill="rgb(250,210,46)" rx="2" ry="2" />
<text  x="30.56" y="271.5" ></text>
</g>
<g >
<title>runtime.funcspdelta (1 samples, 0.11%)</title><rect x="17.5" y="85" width="1.3" height="15.0" fill="rgb(212,198,29)" rx="2" ry="2" />
<text  x="20.52" y="95.5" ></text>
</g>
<g >
<title>syscall.Write (31 samples, 3.29%)</title><rect x="663.3" y="261" width="38.9" height="15.0" fill="rgb(215,119,41)" rx="2" ry="2" />
<text  x="666.33" y="271.5" >sys..</text>
</g>
<g >
<title>runtime.(*pageAlloc).update (1 samples, 0.11%)</title><rect x="105.3" y="37" width="1.3" height="15.0" fill="rgb(242,59,36)" rx="2" ry="2" />
<text  x="108.30" y="47.5" ></text>
</g>
<g >
<title>os.ReadFile (1 samples, 0.11%)</title><rect x="10.0" y="309" width="1.3" height="15.0" fill="rgb(218,5,34)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>google.golang.org/grpc.(*Server).serveStreams.func1 (2 samples, 0.21%)</title><rect x="150.4" y="277" width="2.6" height="15.0" fill="rgb(217,126,37)" rx="2" ry="2" />
<text  x="153.45" y="287.5" ></text>
</g>
<g >
<title>runtime.bgsweep (7 samples, 0.74%)</title><rect x="733.5" y="341" width="8.8" height="15.0" fill="rgb(235,177,1)" rx="2" ry="2" />
<text  x="736.55" y="351.5" ></text>
</g>
<g >
<title>runtime.park_m (118 samples, 12.54%)</title><rect x="1037.0" y="325" width="148.0" height="15.0" fill="rgb(228,227,29)" rx="2" ry="2" />
<text  x="1040.01" y="335.5" >runtime.park_m</text>
</g>
<g >
<title>runtime.runqempty (1 samples, 0.11%)</title><rect x="1127.3" y="277" width="1.3" height="15.0" fill="rgb(205,100,5)" rx="2" ry="2" />
<text  x="1130.30" y="287.5" ></text>
</g>
<g >
<title>runtime.newstack (2 samples, 0.21%)</title><rect x="16.3" y="133" width="2.5" height="15.0" fill="rgb(214,146,44)" rx="2" ry="2" />
<text  x="19.27" y="143.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).writeUnlock (1 samples, 0.11%)</title><rect x="205.6" y="213" width="1.3" height="15.0" fill="rgb(227,5,14)" rx="2" ry="2" />
<text  x="208.62" y="223.5" ></text>
</g>
<g >
<title>runtime.newstack (1 samples, 0.11%)</title><rect x="658.3" y="261" width="1.3" height="15.0" fill="rgb(236,167,18)" rx="2" ry="2" />
<text  x="661.31" y="271.5" ></text>
</g>
<g >
<title>runtime.gcStart (1 samples, 0.11%)</title><rect x="485.3" y="101" width="1.2" height="15.0" fill="rgb(252,121,2)" rx="2" ry="2" />
<text  x="488.26" y="111.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (1 samples, 0.11%)</title><rect x="722.3" y="133" width="1.2" height="15.0" fill="rgb(241,221,47)" rx="2" ry="2" />
<text  x="725.26" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mheap).initSpan (1 samples, 0.11%)</title><rect x="722.3" y="69" width="1.2" height="15.0" fill="rgb(253,202,35)" rx="2" ry="2" />
<text  x="725.26" y="79.5" ></text>
</g>
<g >
<title>runtime.pcdatavalue (7 samples, 0.74%)</title><rect x="598.1" y="69" width="8.8" height="15.0" fill="rgb(224,93,22)" rx="2" ry="2" />
<text  x="601.12" y="79.5" ></text>
</g>
<g >
<title>internal/poll.accept (1 samples, 0.11%)</title><rect x="1022.0" y="117" width="1.2" height="15.0" fill="rgb(217,26,33)" rx="2" ry="2" />
<text  x="1024.97" y="127.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Unlock (1 samples, 0.11%)</title><rect x="139.2" y="261" width="1.2" height="15.0" fill="rgb(235,176,52)" rx="2" ry="2" />
<text  x="142.16" y="271.5" ></text>
</g>
<g >
<title>google.golang.org/grpc/internal/transport.(*http2Server).writeHeaderLocked (1 samples, 0.11%)</title><rect x="554.2" y="245" width="1.3" height="15.0" fill="rgb(208,195,11)" rx="2" ry="2" />
<text  x="557.23" y="255.5" ></text>
</g>
<g >
<title>runtime.selectnbsend (1 samples, 0.11%)</title><rect x="84.0" y="261" width="1.2" height="15.0" fill="rgb(231,62,51)" rx="2" ry="2" />
<text  x="86.99" y="271.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.21%)</title><rect x="461.4" y="181" width="2.5" height="15.0" fill="rgb(232,176,32)" rx="2" ry="2" />
<text  x="464.43" y="191.5" ></text>
</g>
<g >
<title>runtime.casgstatus (1 samples, 0.11%)</title><rect x="1025.7" y="277" width="1.3" height="15.0" fill="rgb(208,177,42)" rx="2" ry="2" />
<text  x="1028.73" y="287.5" ></text>
</g>
<g >
<title>runtime.write (2 samples, 0.21%)</title><rect x="1109.7" y="261" width="2.6" height="15.0" fill="rgb(242,61,49)" rx="2" ry="2" />
<text  x="1112.74" y="271.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.11%)</title><rect x="1188.7" y="341" width="1.3" height="15.0" fill="rgb(221,146,20)" rx="2" ry="2" />
<text  x="1191.75" y="351.5" ></text>
</g>
<g >
<title>google.golang.org/grpc.(*Server).processUnaryRPC.func2 (55 samples, 5.84%)</title><rect x="482.8" y="277" width="68.9" height="15.0" fill="rgb(239,124,52)" rx="2" ry="2" />
<text  x="485.75" y="287.5" >google...</text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.11%)</title><rect x="722.3" y="229" width="1.2" height="15.0" fill="rgb(239,35,12)" rx="2" ry="2" />
<text  x="725.26" y="239.5" ></text>
</g>
<g >
<title>runtime.gentraceback (9 samples, 0.96%)</title><rect x="881.5" y="229" width="11.3" height="15.0" fill="rgb(248,77,12)" rx="2" ry="2" />
<text  x="884.52" y="239.5" ></text>
</g>
<g >
<title>runtime.pcvalue (2 samples, 0.21%)</title><rect x="41.3" y="117" width="2.6" height="15.0" fill="rgb(213,79,43)" rx="2" ry="2" />
<text  x="44.35" y="127.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (1 samples, 0.11%)</title><rect x="1167.4" y="245" width="1.3" height="15.0" fill="rgb(243,102,12)" rx="2" ry="2" />
<text  x="1170.43" y="255.5" ></text>
</g>
<g >
<title>internal/poll.runtime_pollReset (1 samples, 0.11%)</title><rect x="662.1" y="229" width="1.2" height="15.0" fill="rgb(207,182,15)" rx="2" ry="2" />
<text  x="665.07" y="239.5" ></text>
</g>
<g >
<title>syscall.Syscall6 (1 samples, 0.11%)</title><rect x="1022.0" y="69" width="1.2" height="15.0" fill="rgb(206,60,7)" rx="2" ry="2" />
<text  x="1024.97" y="79.5" ></text>
</g>
<g >
<title>net.(*conn).Close (2 samples, 0.21%)</title><rect x="101.5" y="277" width="2.5" height="15.0" fill="rgb(226,131,50)" rx="2" ry="2" />
<text  x="104.54" y="287.5" ></text>
</g>
<g >
<title>runtime.ready (3 samples, 0.32%)</title><rect x="96.5" y="165" width="3.8" height="15.0" fill="rgb(245,1,37)" rx="2" ry="2" />
<text  x="99.52" y="175.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).pop (13 samples, 1.38%)</title><rect x="806.3" y="245" width="16.3" height="15.0" fill="rgb(217,228,17)" rx="2" ry="2" />
<text  x="809.28" y="255.5" ></text>
</g>
<g >
<title>runtime.growslice (1 samples, 0.11%)</title><rect x="82.7" y="261" width="1.3" height="15.0" fill="rgb(229,173,42)" rx="2" ry="2" />
<text  x="85.73" y="271.5" ></text>
</g>
<g >
<title>runtime.goexit0 (6 samples, 0.64%)</title><rect x="1025.7" y="325" width="7.6" height="15.0" fill="rgb(205,58,26)" rx="2" ry="2" />
<text  x="1028.73" y="335.5" ></text>
</g>
<g >
<title>google.golang.org/grpc.(*addrConn).connect (2 samples, 0.21%)</title><rect x="655.8" y="341" width="2.5" height="15.0" fill="rgb(251,105,39)" rx="2" ry="2" />
<text  x="658.80" y="351.5" ></text>
</g>
<g >
<title>runtime.callers (1 samples, 0.11%)</title><rect x="658.3" y="277" width="1.3" height="15.0" fill="rgb(231,95,48)" rx="2" ry="2" />
<text  x="661.31" y="287.5" ></text>
</g>
<g >
<title>runtime.unlock2 (2 samples, 0.21%)</title><rect x="1182.5" y="277" width="2.5" height="15.0" fill="rgb(212,85,31)" rx="2" ry="2" />
<text  x="1185.48" y="287.5" ></text>
</g>
<g >
<title>runtime.lock2 (2 samples, 0.21%)</title><rect x="1034.5" y="261" width="2.5" height="15.0" fill="rgb(212,183,12)" rx="2" ry="2" />
<text  x="1037.51" y="271.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.11%)</title><rect x="485.3" y="85" width="1.2" height="15.0" fill="rgb(216,225,27)" rx="2" ry="2" />
<text  x="488.26" y="95.5" ></text>
</g>
<g >
<title>github.com/spf13/cobra.(*Command).execute (3 samples, 0.32%)</title><rect x="1022.0" y="277" width="3.7" height="15.0" fill="rgb(231,1,49)" rx="2" ry="2" />
<text  x="1024.97" y="287.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.11%)</title><rect x="722.3" y="213" width="1.2" height="15.0" fill="rgb(230,21,33)" rx="2" ry="2" />
<text  x="725.26" y="223.5" ></text>
</g>
<g >
<title>syscall.write (202 samples, 21.47%)</title><rect x="206.9" y="213" width="253.3" height="15.0" fill="rgb(239,119,19)" rx="2" ry="2" />
<text  x="209.88" y="223.5" >syscall.write</text>
</g>
<g >
<title>runtime.selectgo (16 samples, 1.70%)</title><rect x="593.1" y="181" width="20.1" height="15.0" fill="rgb(245,0,52)" rx="2" ry="2" />
<text  x="596.10" y="191.5" ></text>
</g>
<g >
<title>runtime.futexsleep (1 samples, 0.11%)</title><rect x="1028.2" y="245" width="1.3" height="15.0" fill="rgb(232,119,26)" rx="2" ry="2" />
<text  x="1031.24" y="255.5" ></text>
</g>
<g >
<title>runtime/internal/syscall.Syscall6 (25 samples, 2.66%)</title><rect x="48.9" y="133" width="31.3" height="15.0" fill="rgb(214,41,32)" rx="2" ry="2" />
<text  x="51.87" y="143.5" >ru..</text>
</g>
<g >
<title>runtime.casgstatus (1 samples, 0.11%)</title><rect x="1070.9" y="277" width="1.2" height="15.0" fill="rgb(237,102,12)" rx="2" ry="2" />
<text  x="1073.87" y="287.5" ></text>
</g>
<g >
<title>runtime.getempty.func1 (1 samples, 0.11%)</title><rect x="827.6" y="229" width="1.3" height="15.0" fill="rgb(205,174,53)" rx="2" ry="2" />
<text  x="830.60" y="239.5" ></text>
</g>
<g >
<title>runtime.sweepone (7 samples, 0.74%)</title><rect x="733.5" y="325" width="8.8" height="15.0" fill="rgb(208,187,29)" rx="2" ry="2" />
<text  x="736.55" y="335.5" ></text>
</g>
<g >
<title>runtime.SetFinalizer.func1 (1 samples, 0.11%)</title><rect x="102.8" y="213" width="1.2" height="15.0" fill="rgb(227,137,15)" rx="2" ry="2" />
<text  x="105.79" y="223.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.21%)</title><rect x="743.6" y="293" width="2.5" height="15.0" fill="rgb(254,134,21)" rx="2" ry="2" />
<text  x="746.58" y="303.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.11%)</title><rect x="100.3" y="245" width="1.2" height="15.0" fill="rgb(251,106,25)" rx="2" ry="2" />
<text  x="103.29" y="255.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).push (12 samples, 1.28%)</title><rect x="833.9" y="229" width="15.0" height="15.0" fill="rgb(222,105,13)" rx="2" ry="2" />
<text  x="836.87" y="239.5" ></text>
</g>
<g >
<title>runtime.nanotime (2 samples, 0.21%)</title><rect x="874.0" y="245" width="2.5" height="15.0" fill="rgb(243,174,4)" rx="2" ry="2" />
<text  x="877.00" y="255.5" ></text>
</g>
<g >
<title>runtime.stackcacherefill (1 samples, 0.11%)</title><rect x="892.8" y="181" width="1.3" height="15.0" fill="rgb(246,94,18)" rx="2" ry="2" />
<text  x="895.81" y="191.5" ></text>
</g>
<g >
<title>syscall.RawSyscall6 (202 samples, 21.47%)</title><rect x="206.9" y="181" width="253.3" height="15.0" fill="rgb(224,176,53)" rx="2" ry="2" />
<text  x="209.88" y="191.5" >syscall.RawSyscall6</text>
</g>
<g >
<title>runtime.suspendG (6 samples, 0.64%)</title><rect x="894.1" y="245" width="7.5" height="15.0" fill="rgb(252,137,35)" rx="2" ry="2" />
<text  x="897.06" y="255.5" ></text>
</g>
<g >
<title>github.com/pipikai/yun/core/storage/svc.(*Server).BeginSync (1 samples, 0.11%)</title><rect x="10.0" y="341" width="1.3" height="15.0" fill="rgb(237,58,21)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>runtime.mPark (1 samples, 0.11%)</title><rect x="1028.2" y="277" width="1.3" height="15.0" fill="rgb(254,186,3)" rx="2" ry="2" />
<text  x="1031.24" y="287.5" ></text>
</g>
<g >
<title>runtime.wakep (1 samples, 0.11%)</title><rect x="84.0" y="149" width="1.2" height="15.0" fill="rgb(244,62,53)" rx="2" ry="2" />
<text  x="86.99" y="159.5" ></text>
</g>
<g >
<title>syscall.SetNonblock (1 samples, 0.11%)</title><rect x="465.2" y="197" width="1.3" height="15.0" fill="rgb(245,32,22)" rx="2" ry="2" />
<text  x="468.20" y="207.5" ></text>
</g>
<g >
<title>fmt.Sprintf (1 samples, 0.11%)</title><rect x="20.0" y="245" width="1.3" height="15.0" fill="rgb(240,154,4)" rx="2" ry="2" />
<text  x="23.03" y="255.5" ></text>
</g>
<g >
<title>google.golang.org/grpc/internal/transport.(*http2Server).getStream (2 samples, 0.21%)</title><rect x="137.9" y="277" width="2.5" height="15.0" fill="rgb(212,171,27)" rx="2" ry="2" />
<text  x="140.91" y="287.5" ></text>
</g>
<g >
<title>runtime.startm (2 samples, 0.21%)</title><rect x="97.8" y="133" width="2.5" height="15.0" fill="rgb(224,45,28)" rx="2" ry="2" />
<text  x="100.78" y="143.5" ></text>
</g>
<g >
<title>runtime.(*workbuf).checkempty (1 samples, 0.11%)</title><rect x="826.3" y="229" width="1.3" height="15.0" fill="rgb(245,221,13)" rx="2" ry="2" />
<text  x="829.34" y="239.5" ></text>
</g>
<g >
<title>github.com/pipikai/yun/core.Start (3 samples, 0.32%)</title><rect x="1022.0" y="245" width="3.7" height="15.0" fill="rgb(208,183,22)" rx="2" ry="2" />
<text  x="1024.97" y="255.5" ></text>
</g>
<g >
<title>google.golang.org/grpc.(*Server).Serve (3 samples, 0.32%)</title><rect x="1022.0" y="197" width="3.7" height="15.0" fill="rgb(217,191,47)" rx="2" ry="2" />
<text  x="1024.97" y="207.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker.func2 (218 samples, 23.17%)</title><rect x="747.3" y="309" width="273.4" height="15.0" fill="rgb(232,225,44)" rx="2" ry="2" />
<text  x="750.34" y="319.5" >runtime.gcBgMarkWorker.func2</text>
</g>
<g >
<title>runtime/internal/atomic.(*Int64).Load (3 samples, 0.32%)</title><rect x="1162.4" y="261" width="3.8" height="15.0" fill="rgb(240,31,46)" rx="2" ry="2" />
<text  x="1165.41" y="271.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).allocRange (1 samples, 0.11%)</title><rect x="727.3" y="229" width="1.2" height="15.0" fill="rgb(253,145,38)" rx="2" ry="2" />
<text  x="730.28" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocManual (1 samples, 0.11%)</title><rect x="892.8" y="149" width="1.3" height="15.0" fill="rgb(232,36,45)" rx="2" ry="2" />
<text  x="895.81" y="159.5" ></text>
</g>
<g >
<title>runtime.(*gcBits).bitp (1 samples, 0.11%)</title><rect x="905.3" y="229" width="1.3" height="15.0" fill="rgb(250,64,43)" rx="2" ry="2" />
<text  x="908.35" y="239.5" ></text>
</g>
<g >
<title>os.(*file).close (1 samples, 0.11%)</title><rect x="481.5" y="245" width="1.3" height="15.0" fill="rgb(218,53,33)" rx="2" ry="2" />
<text  x="484.50" y="255.5" ></text>
</g>
<g >
<title>runtime.unlock2 (1 samples, 0.11%)</title><rect x="1126.0" y="245" width="1.3" height="15.0" fill="rgb(226,139,7)" rx="2" ry="2" />
<text  x="1129.05" y="255.5" ></text>
</g>
<g >
<title>io.ReadFull (46 samples, 4.89%)</title><rect x="555.5" y="261" width="57.7" height="15.0" fill="rgb(219,136,26)" rx="2" ry="2" />
<text  x="558.48" y="271.5" >io.Rea..</text>
</g>
<g >
<title>runtime.lfstackUnpack (3 samples, 0.32%)</title><rect x="830.1" y="245" width="3.8" height="15.0" fill="rgb(229,121,9)" rx="2" ry="2" />
<text  x="833.11" y="255.5" ></text>
</g>
<g >
<title>runtime.nextSample (1 samples, 0.11%)</title><rect x="486.5" y="101" width="1.3" height="15.0" fill="rgb(235,170,32)" rx="2" ry="2" />
<text  x="489.51" y="111.5" ></text>
</g>
<g >
<title>runtime.(*mcache).releaseAll (1 samples, 0.11%)</title><rect x="744.8" y="213" width="1.3" height="15.0" fill="rgb(238,228,34)" rx="2" ry="2" />
<text  x="747.84" y="223.5" ></text>
</g>
<g >
<title>runtime.adjustframe (1 samples, 0.11%)</title><rect x="16.3" y="85" width="1.2" height="15.0" fill="rgb(240,26,10)" rx="2" ry="2" />
<text  x="19.27" y="95.5" ></text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.11%)</title><rect x="1186.2" y="229" width="1.3" height="15.0" fill="rgb(234,211,13)" rx="2" ry="2" />
<text  x="1189.24" y="239.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).free (1 samples, 0.11%)</title><rect x="1069.6" y="149" width="1.3" height="15.0" fill="rgb(211,136,41)" rx="2" ry="2" />
<text  x="1072.62" y="159.5" ></text>
</g>
<g >
<title>runtime.scanblock (6 samples, 0.64%)</title><rect x="901.6" y="245" width="7.5" height="15.0" fill="rgb(241,106,13)" rx="2" ry="2" />
<text  x="904.58" y="255.5" ></text>
</g>
<g >
<title>runtime.wakep (3 samples, 0.32%)</title><rect x="1178.7" y="277" width="3.8" height="15.0" fill="rgb(223,175,54)" rx="2" ry="2" />
<text  x="1181.71" y="287.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.11%)</title><rect x="463.9" y="197" width="1.3" height="15.0" fill="rgb(244,110,21)" rx="2" ry="2" />
<text  x="466.94" y="207.5" ></text>
</g>
<g >
<title>runtime.futex (7 samples, 0.74%)</title><rect x="1080.9" y="229" width="8.8" height="15.0" fill="rgb(232,157,12)" rx="2" ry="2" />
<text  x="1083.90" y="239.5" ></text>
</g>
<g >
<title>runtime/internal/syscall.Syscall6 (1 samples, 0.11%)</title><rect x="101.5" y="165" width="1.3" height="15.0" fill="rgb(254,118,0)" rx="2" ry="2" />
<text  x="104.54" y="175.5" ></text>
</g>
<g >
<title>sync.(*Pool).getSlow (7 samples, 0.74%)</title><rect x="86.5" y="261" width="8.8" height="15.0" fill="rgb(212,102,3)" rx="2" ry="2" />
<text  x="89.49" y="271.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).update (1 samples, 0.11%)</title><rect x="1069.6" y="133" width="1.3" height="15.0" fill="rgb(251,199,26)" rx="2" ry="2" />
<text  x="1072.62" y="143.5" ></text>
</g>
<g >
<title>bufio.NewReaderSize (2 samples, 0.21%)</title><rect x="12.5" y="277" width="2.5" height="15.0" fill="rgb(225,156,23)" rx="2" ry="2" />
<text  x="15.51" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (3 samples, 0.32%)</title><rect x="105.3" y="165" width="3.8" height="15.0" fill="rgb(230,113,20)" rx="2" ry="2" />
<text  x="108.30" y="175.5" ></text>
</g>
<g >
<title>github.com/pipikai/yun/core/storage.Run (3 samples, 0.32%)</title><rect x="1022.0" y="229" width="3.7" height="15.0" fill="rgb(247,161,46)" rx="2" ry="2" />
<text  x="1024.97" y="239.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (7 samples, 0.74%)</title><rect x="111.6" y="229" width="8.8" height="15.0" fill="rgb(207,205,33)" rx="2" ry="2" />
<text  x="114.57" y="239.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (3 samples, 0.32%)</title><rect x="1017.0" y="245" width="3.7" height="15.0" fill="rgb(210,208,21)" rx="2" ry="2" />
<text  x="1019.95" y="255.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).addScannableStack (1 samples, 0.11%)</title><rect x="726.0" y="277" width="1.3" height="15.0" fill="rgb(205,119,22)" rx="2" ry="2" />
<text  x="729.03" y="287.5" ></text>
</g>
<g >
<title>runtime.findBitRange64 (1 samples, 0.11%)</title><rect x="106.6" y="53" width="1.2" height="15.0" fill="rgb(237,30,24)" rx="2" ry="2" />
<text  x="109.56" y="63.5" ></text>
</g>
<g >
<title>runtime.deductAssistCredit (2 samples, 0.21%)</title><rect x="109.1" y="197" width="2.5" height="15.0" fill="rgb(250,203,30)" rx="2" ry="2" />
<text  x="112.06" y="207.5" ></text>
</g>
<g >
<title>golang.org/x/net/http2/hpack.(*Encoder).WriteField (1 samples, 0.11%)</title><rect x="722.3" y="261" width="1.2" height="15.0" fill="rgb(214,6,27)" rx="2" ry="2" />
<text  x="725.26" y="271.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.11%)</title><rect x="28.8" y="245" width="1.3" height="15.0" fill="rgb(246,140,41)" rx="2" ry="2" />
<text  x="31.81" y="255.5" ></text>
</g>
<g >
<title>runtime.findRunnable (2 samples, 0.21%)</title><rect x="1185.0" y="261" width="2.5" height="15.0" fill="rgb(222,144,36)" rx="2" ry="2" />
<text  x="1187.98" y="271.5" ></text>
</g>
<g >
<title>runtime.funcInfo.entry (1 samples, 0.11%)</title><rect x="17.5" y="69" width="1.3" height="15.0" fill="rgb(211,26,13)" rx="2" ry="2" />
<text  x="20.52" y="79.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).pop (3 samples, 0.32%)</title><rect x="850.2" y="261" width="3.7" height="15.0" fill="rgb(214,19,42)" rx="2" ry="2" />
<text  x="853.17" y="271.5" ></text>
</g>
<g >
<title>runtime.pMask.read (9 samples, 0.96%)</title><rect x="1112.3" y="277" width="11.2" height="15.0" fill="rgb(216,31,35)" rx="2" ry="2" />
<text  x="1115.25" y="287.5" ></text>
</g>
<g >
<title>google.golang.org/grpc/internal/transport.(*controlBuffer).executeAndPut (4 samples, 0.43%)</title><rect x="95.3" y="277" width="5.0" height="15.0" fill="rgb(222,106,30)" rx="2" ry="2" />
<text  x="98.27" y="287.5" ></text>
</g>
<g >
<title>runtime.findfunc (1 samples, 0.11%)</title><rect x="40.1" y="133" width="1.2" height="15.0" fill="rgb(248,206,48)" rx="2" ry="2" />
<text  x="43.10" y="143.5" ></text>
</g>
<g >
<title>runtime.(*guintptr).cas (1 samples, 0.11%)</title><rect x="144.2" y="117" width="1.2" height="15.0" fill="rgb(210,151,39)" rx="2" ry="2" />
<text  x="147.18" y="127.5" ></text>
</g>
<g >
<title>runtime/internal/syscall.Syscall6 (3 samples, 0.32%)</title><rect x="22.5" y="165" width="3.8" height="15.0" fill="rgb(233,121,23)" rx="2" ry="2" />
<text  x="25.54" y="175.5" ></text>
</g>
<g >
<title>runtime.mergeSummaries (1 samples, 0.11%)</title><rect x="727.3" y="197" width="1.2" height="15.0" fill="rgb(235,64,35)" rx="2" ry="2" />
<text  x="730.28" y="207.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (1 samples, 0.11%)</title><rect x="47.6" y="149" width="1.3" height="15.0" fill="rgb(210,129,3)" rx="2" ry="2" />
<text  x="50.62" y="159.5" ></text>
</g>
<g >
<title>golang.org/x/net/http2/hpack.(*Decoder).parseFieldLiteral (2 samples, 0.21%)</title><rect x="35.1" y="229" width="2.5" height="15.0" fill="rgb(220,32,33)" rx="2" ry="2" />
<text  x="38.08" y="239.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).pop (2 samples, 0.21%)</title><rect x="733.5" y="293" width="2.6" height="15.0" fill="rgb(222,130,15)" rx="2" ry="2" />
<text  x="736.55" y="303.5" ></text>
</g>
<g >
<title>runtime.lfstackUnpack (1 samples, 0.11%)</title><rect x="890.3" y="117" width="1.3" height="15.0" fill="rgb(227,179,3)" rx="2" ry="2" />
<text  x="893.30" y="127.5" ></text>
</g>
<g >
<title>runtime.netpollblock (1 samples, 0.11%)</title><rect x="43.9" y="149" width="1.2" height="15.0" fill="rgb(207,53,10)" rx="2" ry="2" />
<text  x="46.86" y="159.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).scavengeOne (5 samples, 0.53%)</title><rect x="727.3" y="245" width="6.2" height="15.0" fill="rgb(252,139,35)" rx="2" ry="2" />
<text  x="730.28" y="255.5" ></text>
</g>
<g >
<title>golang.org/x/net/http2.(*Framer).ReadFrame (38 samples, 4.04%)</title><rect x="32.6" y="293" width="47.6" height="15.0" fill="rgb(209,226,32)" rx="2" ry="2" />
<text  x="35.57" y="303.5" >gola..</text>
</g>
<g >
<title>internal/poll.runtime_pollClose (1 samples, 0.11%)</title><rect x="101.5" y="197" width="1.3" height="15.0" fill="rgb(206,40,54)" rx="2" ry="2" />
<text  x="104.54" y="207.5" ></text>
</g>
<g >
<title>runtime.send (1 samples, 0.11%)</title><rect x="84.0" y="229" width="1.2" height="15.0" fill="rgb(223,52,48)" rx="2" ry="2" />
<text  x="86.99" y="239.5" ></text>
</g>
<g >
<title>internal/poll.runtime_pollWait (1 samples, 0.11%)</title><rect x="43.9" y="165" width="1.2" height="15.0" fill="rgb(251,209,47)" rx="2" ry="2" />
<text  x="46.86" y="175.5" ></text>
</g>
<g >
<title>runtime.futexsleep (7 samples, 0.74%)</title><rect x="1080.9" y="245" width="8.8" height="15.0" fill="rgb(248,55,44)" rx="2" ry="2" />
<text  x="1083.90" y="255.5" ></text>
</g>
<g >
<title>net.sockaddrToTCP (1 samples, 0.11%)</title><rect x="1023.2" y="133" width="1.3" height="15.0" fill="rgb(254,162,24)" rx="2" ry="2" />
<text  x="1026.22" y="143.5" ></text>
</g>
<g >
<title>runtime.(*gList).pop (1 samples, 0.11%)</title><rect x="150.4" y="197" width="1.3" height="15.0" fill="rgb(207,134,32)" rx="2" ry="2" />
<text  x="153.45" y="207.5" ></text>
</g>
<g >
<title>runtime.selectgo (11 samples, 1.17%)</title><rect x="704.7" y="293" width="13.8" height="15.0" fill="rgb(246,168,51)" rx="2" ry="2" />
<text  x="707.71" y="303.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).wait (1 samples, 0.11%)</title><rect x="43.9" y="181" width="1.2" height="15.0" fill="rgb(234,189,48)" rx="2" ry="2" />
<text  x="46.86" y="191.5" ></text>
</g>
<g >
<title>runtime.growslice (4 samples, 0.43%)</title><rect x="484.0" y="133" width="5.0" height="15.0" fill="rgb(222,60,37)" rx="2" ry="2" />
<text  x="487.01" y="143.5" ></text>
</g>
<g >
<title>runtime.shrinkstack (1 samples, 0.11%)</title><rect x="892.8" y="229" width="1.3" height="15.0" fill="rgb(239,76,26)" rx="2" ry="2" />
<text  x="895.81" y="239.5" ></text>
</g>
<g >
<title>runtime.callers (10 samples, 1.06%)</title><rect x="594.4" y="133" width="12.5" height="15.0" fill="rgb(238,83,30)" rx="2" ry="2" />
<text  x="597.36" y="143.5" ></text>
</g>
<g >
<title>runtime.preemptone (1 samples, 0.11%)</title><rect x="805.0" y="245" width="1.3" height="15.0" fill="rgb(241,101,35)" rx="2" ry="2" />
<text  x="808.03" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mheap).nextSpanForSweep (3 samples, 0.32%)</title><rect x="733.5" y="309" width="3.8" height="15.0" fill="rgb(254,213,0)" rx="2" ry="2" />
<text  x="736.55" y="319.5" ></text>
</g>
<g >
<title>google.golang.org/grpc/internal/transport.(*http2Server).handlePing (6 samples, 0.64%)</title><rect x="141.7" y="293" width="7.5" height="15.0" fill="rgb(237,69,40)" rx="2" ry="2" />
<text  x="144.67" y="303.5" ></text>
</g>
<g >
<title>runtime.execute (1 samples, 0.11%)</title><rect x="1025.7" y="293" width="1.3" height="15.0" fill="rgb(236,78,42)" rx="2" ry="2" />
<text  x="1028.73" y="303.5" ></text>
</g>
<g >
<title>google.golang.org/grpc.(*parser).recvMsg (79 samples, 8.40%)</title><rect x="555.5" y="277" width="99.0" height="15.0" fill="rgb(212,160,17)" rx="2" ry="2" />
<text  x="558.48" y="287.5" >google.gola..</text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.11%)</title><rect x="554.2" y="229" width="1.3" height="15.0" fill="rgb(206,185,39)" rx="2" ry="2" />
<text  x="557.23" y="239.5" ></text>
</g>
<g >
<title>syscall.Syscall (31 samples, 3.29%)</title><rect x="663.3" y="229" width="38.9" height="15.0" fill="rgb(235,22,1)" rx="2" ry="2" />
<text  x="666.33" y="239.5" >sys..</text>
</g>
<g >
<title>runtime.gopreempt_m (3 samples, 0.32%)</title><rect x="1185.0" y="309" width="3.7" height="15.0" fill="rgb(222,80,43)" rx="2" ry="2" />
<text  x="1187.98" y="319.5" ></text>
</g>
<g >
<title>google.golang.org/grpc.(*Server).newHTTP2Transport (15 samples, 1.59%)</title><rect x="11.3" y="309" width="18.8" height="15.0" fill="rgb(213,77,48)" rx="2" ry="2" />
<text  x="14.25" y="319.5" ></text>
</g>
<g >
<title>runtime.putfull (12 samples, 1.28%)</title><rect x="833.9" y="245" width="15.0" height="15.0" fill="rgb(212,132,13)" rx="2" ry="2" />
<text  x="836.87" y="255.5" ></text>
</g>
<g >
<title>runtime.callers.func1 (10 samples, 1.06%)</title><rect x="594.4" y="101" width="12.5" height="15.0" fill="rgb(218,50,49)" rx="2" ry="2" />
<text  x="597.36" y="111.5" ></text>
</g>
<g >
<title>runtime.spanOf (1 samples, 0.11%)</title><rect x="891.6" y="165" width="1.2" height="15.0" fill="rgb(208,98,16)" rx="2" ry="2" />
<text  x="894.55" y="175.5" ></text>
</g>
<g >
<title>runtime.memmove (23 samples, 2.44%)</title><rect x="555.5" y="165" width="28.8" height="15.0" fill="rgb(239,147,47)" rx="2" ry="2" />
<text  x="558.48" y="175.5" >ru..</text>
</g>
<g >
<title>runtime.cputicks (1 samples, 0.11%)</title><rect x="606.9" y="165" width="1.3" height="15.0" fill="rgb(233,47,33)" rx="2" ry="2" />
<text  x="609.90" y="175.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.Unmarshal (55 samples, 5.84%)</title><rect x="482.8" y="245" width="68.9" height="15.0" fill="rgb(210,62,22)" rx="2" ry="2" />
<text  x="485.75" y="255.5" >github...</text>
</g>
<g >
<title>runtime.futex (2 samples, 0.21%)</title><rect x="1173.7" y="245" width="2.5" height="15.0" fill="rgb(246,194,41)" rx="2" ry="2" />
<text  x="1176.70" y="255.5" ></text>
</g>
<g >
<title>runtime.greyobject (2 samples, 0.21%)</title><rect x="614.4" y="117" width="2.5" height="15.0" fill="rgb(233,109,15)" rx="2" ry="2" />
<text  x="617.42" y="127.5" ></text>
</g>
<g >
<title>runtime.wakep (1 samples, 0.11%)</title><rect x="104.0" y="197" width="1.3" height="15.0" fill="rgb(232,113,37)" rx="2" ry="2" />
<text  x="107.05" y="207.5" ></text>
</g>
<g >
<title>google.golang.org/grpc.(*addrConn).tryAllAddrs (2 samples, 0.21%)</title><rect x="655.8" y="309" width="2.5" height="15.0" fill="rgb(208,2,11)" rx="2" ry="2" />
<text  x="658.80" y="319.5" ></text>
</g>
<g >
<title>runtime.blockevent (10 samples, 1.06%)</title><rect x="594.4" y="165" width="12.5" height="15.0" fill="rgb(231,47,42)" rx="2" ry="2" />
<text  x="597.36" y="175.5" ></text>
</g>
<g >
<title>io.ReadFull (33 samples, 3.51%)</title><rect x="38.8" y="277" width="41.4" height="15.0" fill="rgb(226,40,47)" rx="2" ry="2" />
<text  x="41.84" y="287.5" >io...</text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.11%)</title><rect x="84.0" y="117" width="1.2" height="15.0" fill="rgb(247,176,5)" rx="2" ry="2" />
<text  x="86.99" y="127.5" ></text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.11%)</title><rect x="102.8" y="165" width="1.2" height="15.0" fill="rgb(239,131,27)" rx="2" ry="2" />
<text  x="105.79" y="175.5" ></text>
</g>
<g >
<title>runtime.stackpoolalloc (1 samples, 0.11%)</title><rect x="892.8" y="165" width="1.3" height="15.0" fill="rgb(245,206,19)" rx="2" ry="2" />
<text  x="895.81" y="175.5" ></text>
</g>
<g >
<title>google.golang.org/grpc.encode (1 samples, 0.11%)</title><rect x="553.0" y="277" width="1.2" height="15.0" fill="rgb(242,166,49)" rx="2" ry="2" />
<text  x="555.98" y="287.5" ></text>
</g>
<g >
<title>runtime.funcspdelta (2 samples, 0.21%)</title><rect x="41.3" y="133" width="2.6" height="15.0" fill="rgb(244,203,17)" rx="2" ry="2" />
<text  x="44.35" y="143.5" ></text>
</g>
<g >
<title>runtime.goexit1 (1 samples, 0.11%)</title><rect x="1020.7" y="341" width="1.3" height="15.0" fill="rgb(216,143,49)" rx="2" ry="2" />
<text  x="1023.71" y="351.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (1 samples, 0.11%)</title><rect x="1069.6" y="229" width="1.3" height="15.0" fill="rgb(231,116,16)" rx="2" ry="2" />
<text  x="1072.62" y="239.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.11%)</title><rect x="26.3" y="245" width="1.3" height="15.0" fill="rgb(252,145,26)" rx="2" ry="2" />
<text  x="29.30" y="255.5" ></text>
</g>
<g >
<title>runtime.tgkill (4 samples, 0.43%)</title><rect x="876.5" y="213" width="5.0" height="15.0" fill="rgb(239,77,8)" rx="2" ry="2" />
<text  x="879.50" y="223.5" ></text>
</g>
<g >
<title>syscall.RawSyscall6 (3 samples, 0.32%)</title><rect x="22.5" y="181" width="3.8" height="15.0" fill="rgb(215,164,9)" rx="2" ry="2" />
<text  x="25.54" y="191.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.21%)</title><rect x="150.4" y="245" width="2.6" height="15.0" fill="rgb(243,23,2)" rx="2" ry="2" />
<text  x="153.45" y="255.5" ></text>
</g>
<g >
<title>golang.org/x/net/http2/hpack.(*Decoder).parseHeaderFieldRepr (2 samples, 0.21%)</title><rect x="35.1" y="245" width="2.5" height="15.0" fill="rgb(212,218,44)" rx="2" ry="2" />
<text  x="38.08" y="255.5" ></text>
</g>
<g >
<title>runtime.goready.func1 (1 samples, 0.11%)</title><rect x="104.0" y="229" width="1.3" height="15.0" fill="rgb(219,72,47)" rx="2" ry="2" />
<text  x="107.05" y="239.5" ></text>
</g>
<g >
<title>runtime.mPark (1 samples, 0.11%)</title><rect x="1185.0" y="229" width="1.2" height="15.0" fill="rgb(213,36,19)" rx="2" ry="2" />
<text  x="1187.98" y="239.5" ></text>
</g>
<g >
<title>runtime.gcstopm (1 samples, 0.11%)</title><rect x="1185.0" y="245" width="1.2" height="15.0" fill="rgb(236,57,17)" rx="2" ry="2" />
<text  x="1187.98" y="255.5" ></text>
</g>
<g >
<title>runtime.procyield (4 samples, 0.43%)</title><rect x="896.6" y="229" width="5.0" height="15.0" fill="rgb(245,53,45)" rx="2" ry="2" />
<text  x="899.57" y="239.5" ></text>
</g>
<g >
<title>runtime.goready (2 samples, 0.21%)</title><rect x="144.2" y="181" width="2.5" height="15.0" fill="rgb(213,82,32)" rx="2" ry="2" />
<text  x="147.18" y="191.5" ></text>
</g>
<g >
<title>golang.org/x/net/http2.typeFrameParser (1 samples, 0.11%)</title><rect x="81.5" y="293" width="1.2" height="15.0" fill="rgb(205,65,47)" rx="2" ry="2" />
<text  x="84.48" y="303.5" ></text>
</g>
<g >
<title>runtime.copystack (1 samples, 0.11%)</title><rect x="28.8" y="261" width="1.3" height="15.0" fill="rgb(211,103,5)" rx="2" ry="2" />
<text  x="31.81" y="271.5" ></text>
</g>
<g >
<title>runtime.checkTimersNoP (1 samples, 0.11%)</title><rect x="1074.6" y="277" width="1.3" height="15.0" fill="rgb(231,84,36)" rx="2" ry="2" />
<text  x="1077.63" y="287.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).pop (1 samples, 0.11%)</title><rect x="848.9" y="245" width="1.3" height="15.0" fill="rgb(245,85,25)" rx="2" ry="2" />
<text  x="851.92" y="255.5" ></text>
</g>
<g >
<title>runtime.markroot (31 samples, 3.29%)</title><rect x="871.5" y="277" width="38.9" height="15.0" fill="rgb(227,211,23)" rx="2" ry="2" />
<text  x="874.49" y="287.5" >run..</text>
</g>
<g >
<title>google.golang.org/grpc/internal/transport.(*http2Server).Write (1 samples, 0.11%)</title><rect x="554.2" y="277" width="1.3" height="15.0" fill="rgb(234,169,16)" rx="2" ry="2" />
<text  x="557.23" y="287.5" ></text>
</g>
<g >
<title>runtime.pcdatavalue (2 samples, 0.21%)</title><rect x="713.5" y="181" width="2.5" height="15.0" fill="rgb(232,211,21)" rx="2" ry="2" />
<text  x="716.49" y="191.5" ></text>
</g>
<g >
<title>runtime.mProf_Malloc (1 samples, 0.11%)</title><rect x="487.8" y="85" width="1.2" height="15.0" fill="rgb(251,224,3)" rx="2" ry="2" />
<text  x="490.77" y="95.5" ></text>
</g>
<g >
<title>runtime.goready (1 samples, 0.11%)</title><rect x="104.0" y="261" width="1.3" height="15.0" fill="rgb(212,228,30)" rx="2" ry="2" />
<text  x="107.05" y="271.5" ></text>
</g>
<g >
<title>runtime.preemptM (6 samples, 0.64%)</title><rect x="797.5" y="245" width="7.5" height="15.0" fill="rgb(252,149,49)" rx="2" ry="2" />
<text  x="800.50" y="255.5" ></text>
</g>
<g >
<title>syscall.RawSyscall6 (30 samples, 3.19%)</title><rect x="664.6" y="213" width="37.6" height="15.0" fill="rgb(246,18,4)" rx="2" ry="2" />
<text  x="667.58" y="223.5" >sys..</text>
</g>
<g >
<title>fmt.Sprintf (3 samples, 0.32%)</title><rect x="15.0" y="277" width="3.8" height="15.0" fill="rgb(236,216,40)" rx="2" ry="2" />
<text  x="18.02" y="287.5" ></text>
</g>
<g >
<title>runtime.chansend (3 samples, 0.32%)</title><rect x="96.5" y="245" width="3.8" height="15.0" fill="rgb(221,56,28)" rx="2" ry="2" />
<text  x="99.52" y="255.5" ></text>
</g>
<g >
<title>runtime.getempty (6 samples, 0.64%)</title><rect x="822.6" y="245" width="7.5" height="15.0" fill="rgb(235,201,38)" rx="2" ry="2" />
<text  x="825.58" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (1 samples, 0.11%)</title><rect x="722.3" y="149" width="1.2" height="15.0" fill="rgb(231,32,45)" rx="2" ry="2" />
<text  x="725.26" y="159.5" ></text>
</g>
<g >
<title>runtime.selectnbsend (2 samples, 0.21%)</title><rect x="144.2" y="229" width="2.5" height="15.0" fill="rgb(233,109,39)" rx="2" ry="2" />
<text  x="147.18" y="239.5" ></text>
</g>
<g >
<title>runtime.copystack (2 samples, 0.21%)</title><rect x="16.3" y="117" width="2.5" height="15.0" fill="rgb(223,124,52)" rx="2" ry="2" />
<text  x="19.27" y="127.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).grow (12 samples, 1.28%)</title><rect x="105.3" y="261" width="15.1" height="15.0" fill="rgb(237,162,11)" rx="2" ry="2" />
<text  x="108.30" y="271.5" ></text>
</g>
<g >
<title>runtime.systemstack (3 samples, 0.32%)</title><rect x="613.2" y="197" width="3.7" height="15.0" fill="rgb(219,88,36)" rx="2" ry="2" />
<text  x="616.17" y="207.5" ></text>
</g>
<g >
<title>runtime.findObject (12 samples, 1.28%)</title><rect x="941.7" y="261" width="15.1" height="15.0" fill="rgb(227,146,29)" rx="2" ry="2" />
<text  x="944.71" y="271.5" ></text>
</g>
<g >
<title>runtime.gfget (1 samples, 0.11%)</title><rect x="151.7" y="197" width="1.3" height="15.0" fill="rgb(223,213,52)" rx="2" ry="2" />
<text  x="154.70" y="207.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.11%)</title><rect x="1024.5" y="133" width="1.2" height="15.0" fill="rgb(241,141,49)" rx="2" ry="2" />
<text  x="1027.47" y="143.5" ></text>
</g>
</g>
</svg>
